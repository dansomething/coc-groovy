[Trace - 10:29:19 AM] Sending request 'initialize - (0)'.
Params: {
    "processId": 71112,
    "rootPath": "/Users/dan/dev/powerpro/breach",
    "rootUri": "file:///Users/dan/dev/powerpro/breach",
    "capabilities": {
        "workspace": {
            "applyEdit": true,
            "workspaceEdit": {
                "documentChanges": true,
                "resourceOperations": [
                    "create",
                    "rename",
                    "delete"
                ],
                "failureHandling": "textOnlyTransactional"
            },
            "didChangeConfiguration": {
                "dynamicRegistration": true
            },
            "didChangeWatchedFiles": {
                "dynamicRegistration": true
            },
            "symbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                }
            },
            "executeCommand": {
                "dynamicRegistration": true
            },
            "configuration": true,
            "workspaceFolders": true
        },
        "textDocument": {
            "publishDiagnostics": {
                "relatedInformation": true
            },
            "synchronization": {
                "dynamicRegistration": true,
                "willSave": true,
                "willSaveWaitUntil": true,
                "didSave": true
            },
            "completion": {
                "dynamicRegistration": true,
                "contextSupport": true,
                "completionItem": {
                    "snippetSupport": true,
                    "commitCharactersSupport": true,
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "deprecatedSupport": true,
                    "preselectSupport": true
                },
                "completionItemKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                }
            },
            "hover": {
                "dynamicRegistration": true,
                "contentFormat": [
                    "markdown",
                    "plaintext"
                ]
            },
            "signatureHelp": {
                "dynamicRegistration": true,
                "signatureInformation": {
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "parameterInformation": {
                        "labelOffsetSupport": true
                    }
                }
            },
            "definition": {
                "dynamicRegistration": true
            },
            "references": {
                "dynamicRegistration": true
            },
            "documentHighlight": {
                "dynamicRegistration": true
            },
            "documentSymbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                }
            },
            "codeAction": {
                "dynamicRegistration": true,
                "codeActionLiteralSupport": {
                    "codeActionKind": {
                        "valueSet": [
                            "",
                            "quickfix",
                            "refactor",
                            "refactor.extract",
                            "refactor.inline",
                            "refactor.rewrite",
                            "source",
                            "source.organizeImports"
                        ]
                    }
                }
            },
            "codeLens": {
                "dynamicRegistration": true
            },
            "formatting": {
                "dynamicRegistration": true
            },
            "rangeFormatting": {
                "dynamicRegistration": true
            },
            "onTypeFormatting": {
                "dynamicRegistration": true
            },
            "rename": {
                "dynamicRegistration": true,
                "prepareSupport": true
            },
            "documentLink": {
                "dynamicRegistration": true
            },
            "typeDefinition": {
                "dynamicRegistration": true
            },
            "implementation": {
                "dynamicRegistration": true
            },
            "declaration": {
                "dynamicRegistration": true
            },
            "colorProvider": {
                "dynamicRegistration": true
            },
            "foldingRange": {
                "dynamicRegistration": true,
                "rangeLimit": 5000,
                "lineFoldingOnly": true
            }
        }
    },
    "initializationOptions": {
        "bundles": [
            "/Users/dan/.config/coc/extensions/node_modules/coc-java-debug/server/com.microsoft.java.debug.plugin-0.24.0.jar"
        ],
        "workspaceFolders": [
            "file:///Users/dan/.homesick/repos/powerpro-dotfiles",
            "file:///Users/dan/dev/powerpro/breach"
        ],
        "settings": {
            "java": {
                "jdt": {
                    "ls": {
                        "vmargs": "-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication -javaagent:/Applications/Eclipse.app/Contents/Eclipse/lombok.jar -Xbootclasspath/a:/Applications/Eclipse.app/Contents/Eclipse/lombok.jar",
                        "home": "/Users/dan/.config/coc/extensions/coc-java-data/server-0.48.0-201912040033"
                    }
                },
                "errors": {
                    "incompleteClasspath": {
                        "severity": "warning"
                    }
                },
                "configuration": {
                    "checkProjectSettingsExclusions": true,
                    "updateBuildConfiguration": "interactive"
                },
                "trace": {
                    "server": "verbose"
                },
                "import": {
                    "gradle": {
                        "enabled": true,
                        "wrapper": {
                            "enabled": true
                        }
                    },
                    "maven": {
                        "enabled": true
                    },
                    "exclusions": [
                        "**/node_modules/**",
                        "**/.metadata/**",
                        "**/archetype-resources/**",
                        "**/META-INF/maven/**"
                    ]
                },
                "referencesCodeLens": {
                    "enabled": false
                },
                "signatureHelp": {
                    "enabled": false
                },
                "implementationsCodeLens": {
                    "enabled": false
                },
                "format": {
                    "enabled": true,
                    "comments": {
                        "enabled": true
                    },
                    "onType": {
                        "enabled": true,
                        "fixComment": {
                            "enabled": true
                        }
                    },
                    "settings": {
                        "url": "/Users/dan/dev/powerpro/breach/eclipse-java-style.xml"
                    }
                },
                "autobuild": {
                    "enabled": true
                },
                "maxConcurrentBuilds": 2,
                "completion": {
                    "enabled": true,
                    "overwrite": false,
                    "guessMethodArguments": true,
                    "favoriteStaticMembers": [
                        "org.apache.commons.lang3.RandomStringUtils.*",
                        "org.apache.commons.lang3.RandomUtils.*",
                        "org.apache.commons.lang3.StringUtils.*",
                        "org.apache.commons.lang3.WordUtils.*",
                        "org.springframework.util.CollectionUtils.*"
                    ],
                    "importOrder": [
                        "com.google",
                        "com",
                        "lombok",
                        "org",
                        "java",
                        "javax"
                    ]
                },
                "progressReports": {
                    "enabled": true
                },
                "foldingRange": {
                    "enabled": true
                },
                "maven": {
                    "downloadSources": true
                },
                "codeGeneration": {
                    "hashCodeEquals": {
                        "useJava7Objects": false,
                        "useInstanceof": false
                    },
                    "useBlocks": false,
                    "generateComments": false,
                    "toString": {
                        "template": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",
                        "codeStyle": "STRING_CONCATENATION",
                        "skipNullValues": false,
                        "listArrayContents": true,
                        "limitElements": 0
                    }
                }
            }
        },
        "extendedClientCapabilities": {
            "progressReportProvider": true,
            "classFileContentsSupport": true,
            "overrideMethodsPromptSupport": true,
            "hashCodeEqualsPromptSupport": true,
            "advancedOrganizeImportsSupport": true,
            "generateToStringPromptSupport": true,
            "advancedGenerateAccessorsSupport": true,
            "generateConstructorsPromptSupport": true,
            "generateDelegateMethodsPromptSupport": true
        },
        "triggerFiles": [
            "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/CommunityTextController.java"
        ]
    },
    "trace": "verbose",
    "workspaceFolders": [
        {
            "uri": "file:///Users/dan/.homesick/repos/powerpro-dotfiles",
            "name": "/Users/dan/.homesick/repos"
        },
        {
            "uri": "file:///Users/dan/dev/powerpro/breach",
            "name": "/Users/dan/dev/powerpro"
        }
    ]
}


[Trace - 10:29:24 AM] Received response 'initialize - (0)' in 5506ms.
Result: {
    "capabilities": {
        "textDocumentSync": {
            "openClose": true,
            "change": 2,
            "willSave": true,
            "willSaveWaitUntil": true,
            "save": {
                "includeText": true
            }
        },
        "workspace": {
            "workspaceFolders": {
                "supported": true,
                "changeNotifications": true
            }
        },
        "selectionRangeProvider": true
    }
}


[Trace - 10:29:24 AM] Sending notification 'initialized'.
Params: {}


[Trace - 10:29:24 AM] Sending notification 'workspace/didChangeConfiguration'.
Params: {
    "settings": {
        "java": {
            "jdt": {
                "ls": {
                    "vmargs": "-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication -javaagent:/Applications/Eclipse.app/Contents/Eclipse/lombok.jar -Xbootclasspath/a:/Applications/Eclipse.app/Contents/Eclipse/lombok.jar",
                    "home": "/Users/dan/.config/coc/extensions/coc-java-data/server-0.48.0-201912040033"
                }
            },
            "errors": {
                "incompleteClasspath": {
                    "severity": "warning"
                }
            },
            "configuration": {
                "checkProjectSettingsExclusions": true,
                "updateBuildConfiguration": "interactive"
            },
            "trace": {
                "server": "verbose"
            },
            "import": {
                "gradle": {
                    "enabled": true,
                    "wrapper": {
                        "enabled": true
                    }
                },
                "maven": {
                    "enabled": true
                },
                "exclusions": [
                    "**/node_modules/**",
                    "**/.metadata/**",
                    "**/archetype-resources/**",
                    "**/META-INF/maven/**"
                ]
            },
            "referencesCodeLens": {
                "enabled": false
            },
            "signatureHelp": {
                "enabled": false
            },
            "implementationsCodeLens": {
                "enabled": false
            },
            "format": {
                "enabled": true,
                "comments": {
                    "enabled": true
                },
                "onType": {
                    "enabled": true,
                    "fixComment": {
                        "enabled": true
                    }
                },
                "settings": {
                    "url": "/Users/dan/dev/powerpro/breach/eclipse-java-style.xml"
                }
            },
            "autobuild": {
                "enabled": true
            },
            "maxConcurrentBuilds": 2,
            "completion": {
                "enabled": true,
                "overwrite": false,
                "guessMethodArguments": true,
                "favoriteStaticMembers": [
                    "org.apache.commons.lang3.RandomStringUtils.*",
                    "org.apache.commons.lang3.RandomUtils.*",
                    "org.apache.commons.lang3.StringUtils.*",
                    "org.apache.commons.lang3.WordUtils.*",
                    "org.springframework.util.CollectionUtils.*"
                ],
                "importOrder": [
                    "com.google",
                    "com",
                    "lombok",
                    "org",
                    "java",
                    "javax"
                ]
            },
            "progressReports": {
                "enabled": true
            },
            "foldingRange": {
                "enabled": true
            },
            "maven": {
                "downloadSources": true
            },
            "codeGeneration": {
                "hashCodeEquals": {
                    "useJava7Objects": false,
                    "useInstanceof": false
                },
                "useBlocks": false,
                "generateComments": false,
                "toString": {
                    "template": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",
                    "codeStyle": "STRING_CONCATENATION",
                    "skipNullValues": false,
                    "listArrayContents": true,
                    "limitElements": 0
                }
            }
        }
    }
}


[Trace - 10:29:24 AM] Sending notification 'textDocument/didOpen'.
Params: {
    "textDocument": {
        "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/CommunityTextController.java",
        "languageId": "java",
        "version": 1,
        "text": "package com.powerpro.platform.web.controller.administration;\n\nimport static org.apache.commons.lang3.StringUtils.isBlank;\n\nimport com.powerpro.platform.model.community.Community;\nimport com.powerpro.platform.model.community.CommunityText;\nimport com.powerpro.platform.model.system.Language;\nimport com.powerpro.platform.model.system.LanguageText;\nimport com.powerpro.platform.service.system.LanguageService;\nimport com.powerpro.platform.web.model.CommunityTextView;\nimport com.powerpro.platform.web.model.LanguageTextView;\nimport com.powerpro.platform.web.model.LanguageTextViews;\n\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\n\nimport org.springframework.beans.propertyeditors.StringTrimmerEditor;\nimport org.springframework.security.access.annotation.Secured;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.validation.BindingResult;\nimport org.springframework.web.bind.WebDataBinder;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.InitBinder;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Optional;\nimport java.util.Set;\n\nimport javax.validation.Valid;\n\n@Controller\n@RequestMapping(\"/admin/community/{communityId}/text\")\n@RequiredArgsConstructor\n@Secured({\"ROLE_ADMIN\"})\n@Slf4j\npublic class CommunityTextController extends BaseController {\n\n    private final LanguageService languageService;\n\n    @InitBinder\n    public void initBinder(final WebDataBinder binder) {\n        // Converts empty string form values to null\n        binder.registerCustomEditor(String.class, new StringTrimmerEditor(true));\n    }\n\n    @GetMapping({ \"\", \"/\" })\n    public String edit(@PathVariable final long communityId, final Model model) {\n        Community community = communityService.findOne(communityId);\n        communityService.loadCommunityTexts(community);\n        model.addAttribute(\"communityTextView\", createCommunityTextView(community));\n        return \"admin/community-text/edit\";\n    }\n\n    @PostMapping({ \"\", \"/\" })\n    public String save(\n        @PathVariable final long communityId,\n        @Valid @ModelAttribute final CommunityTextView communityTextView,\n        final BindingResult result\n    ) {\n        if (result.hasErrors()) {\n            log.warn(\"validation failed with errors - [{}]\", result.getAllErrors());\n            return \"admin/community-text/edit\";\n        }\n\n        Community community = communityService.findOne(communityId);\n        community.setTexts(toEntities(community, communityTextView));\n        communityService.save(community);\n        return \"redirect:/admin/community/\" + community.getId() + \"/text?save=success\";\n    }\n\n    /**\n     * Creates the community text languages view model for a community.\n     *\n     * It will group each community language text by its text name (i.e. kiosk.completion)\n     * and then each text name bucket will contain the view model for each language.\n     * It will also sort by text name then language name for consistency in the UI.\n     */\n    private CommunityTextView createCommunityTextView(final Community community) {\n        List<CommunityText> communityTexts = new ArrayList<>(community.getTexts());\n        communityTexts.sort((a, b) -> {\n            int c = a.getLanguageText().getName().compareTo(b.getLanguageText().getName());\n            if (c == 0) {\n                c = a.getLanguage().getName().compareTo(b.getLanguage().getName());\n            }\n            return c;\n        });\n\n        HashMap<String, LanguageTextViews> views = new HashMap<>(communityTexts.size());\n        for (CommunityText ct : communityTexts) {\n            LanguageTextView view = new LanguageTextView(ct);\n            String key = ct.getLanguageText().getName();\n            if (views.containsKey(key)) {\n                views.get(key).getList().add(view);\n            } else {\n                views.put(\n                    ct.getLanguageText().getName(),\n                    new LanguageTextViews(Arrays.asList(view))\n                );\n            }\n        }\n\n        return new CommunityTextView(views);\n    }\n\n    /**\n     * Converts the view model structure to entities to be stored on the community model.\n     *\n     * It will update existing records if found on the community or create new ones\n     * as long as the text content is not blank. Those will be removed from the system.\n     *\n     * @param community The community to use to find existing entities.\n     * @param communityTextView The view model to convert.\n     * @return The set of {@link CommunityText} entities.\n     */\n    private Set<CommunityText> toEntities(final Community community, final CommunityTextView communityTextView) {\n        Set<CommunityText> entities = new HashSet<>();\n\n        for (LanguageTextViews views : communityTextView.getMap().values()) {\n            for (LanguageTextView view : views.getList()) {\n                if (isBlank(view.getContent())) {\n                    continue;\n                }\n\n                CommunityText communityText = null;\n                if (view.getId() > 0) {\n                    communityText = community.findTextById(view.getId()).orElse(null);\n                }\n\n                if (communityText == null) {\n                    Optional<Language> language = languageService.findById(view.getLanguageId());\n                    Optional<LanguageText> languageText = languageService.findTextById(view.getLanguageTextId());\n                    if (language.isPresent() && languageText.isPresent()) {\n                        communityText = new CommunityText(language.get(), languageText.get());\n                    }\n                }\n\n                if (communityText == null) {\n                    log.warn( \"Failed to create or update community language text for view model [{}]\", view);\n                }\n                else {\n                    communityText.setContent(view.getContent());\n                    entities.add(communityText);\n                }\n            }\n        }\n\n        return entities;\n    }\n\n}\n"
    }
}


[Trace - 10:29:24 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "30% Starting Java Language Server - Background task"
}


[Trace - 10:29:24 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Initialize Workspace",
    "status": "30% Initialize Workspace",
    "totalWork": 1000,
    "workDone": 300,
    "complete": false
}


[Trace - 10:29:25 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "68% Starting Java Language Server - Background task /Users/dan/.homesick/repos/powerpro-dotfiles/logging"
}


[Trace - 10:29:25 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Initialize Workspace",
    "subTask": "/Users/dan/.homesick/repos/powerpro-dotfiles/logging",
    "status": "68% Initialize Workspace /Users/dan/.homesick/repos/powerpro-dotfiles/logging",
    "totalWork": 1000,
    "workDone": 676,
    "complete": false
}


[Trace - 10:29:25 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-platform'."
}


[Trace - 10:29:25 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-platform'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-platform'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:25 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-platform'."
}


[Trace - 10:29:25 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-platform'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-platform'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:25 AM] Received notification 'language/progressReport'.
Params: {
    "id": "67e8c694-b393-426e-aff4-9d8fd10ba61e",
    "task": "Repository registry initialization",
    "status": "Repository registry initialization",
    "totalWork": 0,
    "workDone": 0,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-api'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-api'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-api'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-api'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-api'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-api'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-admin'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-admin'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-admin'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-admin'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-admin'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-admin'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-backend-api'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-backend-api'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-backend-api'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-backend-api'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-backend-api'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-backend-api'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-common'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-common'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-common'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-common'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-common'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-common'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "4124393a-779f-4693-94c5-29cd3c422d90",
    "task": "Updating indexes",
    "status": "Updating indexes",
    "totalWork": -1,
    "workDone": 0,
    "complete": false
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "4124393a-779f-4693-94c5-29cd3c422d90",
    "task": "Updating indexes",
    "status": "Updating indexes",
    "totalWork": -1,
    "workDone": 0,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "4124393a-779f-4693-94c5-29cd3c422d90",
    "task": "Updating indexes",
    "status": "Updating indexes",
    "totalWork": -1,
    "workDone": 0,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-model'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-model'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-model'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-model'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-model'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-model'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-partner-api'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-partner-api'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-partner-api'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-partner-api'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-partner-api'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-partner-api'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-persistence'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-persistence'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-persistence'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-persistence'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-persistence'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-persistence'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-persistence-test'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-persistence-test'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-persistence-test'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-persistence-test'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-persistence-test'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-persistence-test'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'powerpro-util'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'powerpro-util'.",
    "status": "Importing Maven project(s) - Opening 'powerpro-util'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/powerpro-util'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/powerpro-util'.",
    "status": "Importing Maven project(s) - Refreshing '/powerpro-util'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Opening 'coverage-report'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Opening 'coverage-report'.",
    "status": "Importing Maven project(s) - Opening 'coverage-report'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/coverage-report'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/coverage-report'.",
    "status": "Importing Maven project(s) - Refreshing '/coverage-report'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Started",
    "message": "Ready"
}


[Info  - 10:29:26 AM] JDT Language Server started
[object Object]
[Trace - 10:29:26 AM] Received notification 'language/status'.
Params: {
    "type": "Starting",
    "message": "100% Starting Java Language Server - Importing Maven project(s) Refreshing '/coverage-report'."
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "3bb2fd62-099b-4f1a-8474-b9b4f5e83d48",
    "task": "Importing Maven project(s)",
    "subTask": "Refreshing '/coverage-report'.",
    "status": "Importing Maven project(s) - Refreshing '/coverage-report'.",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (1)'.
Params: {
    "registrations": [
        {
            "id": "8224f478-ee56-48c5-b6bb-8c3d3e809381",
            "method": "textDocument/completion",
            "registerOptions": {
                "resolveProvider": true,
                "triggerCharacters": [
                    ".",
                    "@",
                    "#",
                    "*"
                ]
            }
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (1)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (2)'.
Params: {
    "registrations": [
        {
            "id": "cf1a2dc5-b58b-47d5-8304-6dccd6b606a6",
            "method": "workspace/symbol"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (2)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (3)'.
Params: {
    "registrations": [
        {
            "id": "ed1de5de-60e4-465d-8b87-9fe7e01121f5",
            "method": "textDocument/documentSymbol"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (3)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (4)'.
Params: {
    "registrations": [
        {
            "id": "07a6e3ed-468c-4e3a-a55b-de92222f25ee",
            "method": "textDocument/codeAction",
            "registerOptions": {
                "codeActionKinds": [
                    "quickfix",
                    "refactor",
                    "refactor.extract",
                    "refactor.inline",
                    "refactor.rewrite",
                    "source",
                    "source.organizeImports"
                ]
            }
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (4)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (5)'.
Params: {
    "registrations": [
        {
            "id": "61515758-4e9b-4bdc-83c0-49d11445075d",
            "method": "textDocument/definition"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (5)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (6)'.
Params: {
    "registrations": [
        {
            "id": "0a951a4a-64f8-47c5-9f13-6ed7b5269ac5",
            "method": "textDocument/typeDefinition"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (6)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (7)'.
Params: {
    "registrations": [
        {
            "id": "3f419e3e-8711-421c-acd7-33da5443e755",
            "method": "textDocument/hover"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (7)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (8)'.
Params: {
    "registrations": [
        {
            "id": "6927138a-aaf4-49a6-8eec-adfc1c49dd15",
            "method": "textDocument/references"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (8)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (9)'.
Params: {
    "registrations": [
        {
            "id": "85e4d465-459c-4a0e-8c43-883dc71082ea",
            "method": "textDocument/documentHighlight"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (9)'. Processing request took 1ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (10)'.
Params: {
    "registrations": [
        {
            "id": "66210c82-1189-44c1-a9a0-0137760fd1c7",
            "method": "textDocument/foldingRange"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (10)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (11)'.
Params: {
    "registrations": [
        {
            "id": "2b1b61ba-4f73-4296-aeee-b3871b081269",
            "method": "workspace/didChangeWorkspaceFolders"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (11)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (12)'.
Params: {
    "registrations": [
        {
            "id": "e0925184-db39-4225-9301-7a10cdd8f992",
            "method": "textDocument/implementation"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (12)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (13)'.
Params: {
    "registrations": [
        {
            "id": "6a3883bc-1e88-45ec-9a68-4cf3001bf3aa",
            "method": "textDocument/formatting"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (13)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (14)'.
Params: {
    "registrations": [
        {
            "id": "2ba94501-51c8-45a8-877a-627fb68ea2f3",
            "method": "textDocument/rangeFormatting"
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (14)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (15)'.
Params: {
    "registrations": [
        {
            "id": "d2ff99dc-a123-4238-a816-657be3c3f1ab",
            "method": "textDocument/onTypeFormatting",
            "registerOptions": {
                "firstTriggerCharacter": ";",
                "moreTriggerCharacter": [
                    "\n",
                    "}"
                ]
            }
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (15)'. Processing request took 1ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (16)'.
Params: {
    "registrations": [
        {
            "id": "a9f8af37-c135-4cf4-8b8c-c2895f542f0e",
            "method": "textDocument/rename",
            "registerOptions": {
                "prepareProvider": true
            }
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (16)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received request 'client/registerCapability - (17)'.
Params: {
    "registrations": [
        {
            "id": "2bbf8bb1-9fc8-4623-977d-4158654909f7",
            "method": "workspace/executeCommand",
            "registerOptions": {
                "commands": [
                    "java.edit.organizeImports",
                    "vscode.java.checkProjectSettings",
                    "vscode.java.isOnClasspath",
                    "vscode.java.fetchUsageData",
                    "vscode.java.validateLaunchConfig",
                    "java.project.removeFromSourcePath",
                    "java.project.listSourcePaths",
                    "vscode.java.resolveMainMethod",
                    "java.project.updateSourceAttachment",
                    "vscode.java.resolveClasspath",
                    "vscode.java.resolveBuildFiles",
                    "vscode.java.resolveMainClass",
                    "vscode.java.updateDebugSettings",
                    "java.project.resolveSourceAttachment",
                    "vscode.java.buildWorkspace",
                    "java.project.addToSourcePath",
                    "vscode.java.startDebugSession",
                    "vscode.java.inferLaunchCommandLength",
                    "vscode.java.resolveElementAtSelection"
                ]
            }
        }
    ]
}


[Trace - 10:29:26 AM] Sending response 'client/registerCapability - (17)'. Processing request took 0ms
No result returned.


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "f3028dc4-d90d-4e70-9d69-d69e401dd3a9",
    "task": "Building",
    "status": "0% Building",
    "totalWork": 1000,
    "workDone": 0,
    "complete": false
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "f3028dc4-d90d-4e70-9d69-d69e401dd3a9",
    "task": "Building",
    "status": "100% Building",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:26 AM] Received notification 'language/progressReport'.
Params: {
    "id": "f3028dc4-d90d-4e70-9d69-d69e401dd3a9",
    "task": "Building",
    "status": "100% Building",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:27 AM] Received notification 'language/progressReport'.
Params: {
    "id": "01d3458f-f114-4021-a36e-dfccff6cdc28",
    "task": "Building",
    "status": "0% Building",
    "totalWork": 1000,
    "workDone": 0,
    "complete": false
}


[Trace - 10:29:28 AM] Received notification 'language/progressReport'.
Params: {
    "id": "01d3458f-f114-4021-a36e-dfccff6cdc28",
    "task": "Building",
    "subTask": "Invoking 'Maven Project Builder' on '/coverage-report'.",
    "status": "9% Building Invoking 'Maven Project Builder' on '/coverage-report'.",
    "totalWork": 1000,
    "workDone": 91,
    "complete": false
}


[Trace - 10:29:28 AM] Received notification 'language/progressReport'.
Params: {
    "id": "01d3458f-f114-4021-a36e-dfccff6cdc28",
    "task": "Building",
    "subTask": "",
    "status": "100% Building",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:28 AM] Received notification 'language/progressReport'.
Params: {
    "id": "01d3458f-f114-4021-a36e-dfccff6cdc28",
    "task": "Building",
    "subTask": "",
    "status": "100% Building",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:29 AM] Received notification 'language/progressReport'.
Params: {
    "id": "1d35efdd-471c-436b-bbd8-76770d459782",
    "task": "Validate documents",
    "status": "0% Validate documents",
    "totalWork": 1000,
    "workDone": 0,
    "complete": false
}


[Trace - 10:29:30 AM] Received notification 'language/progressReport'.
Params: {
    "id": "1d35efdd-471c-436b-bbd8-76770d459782",
    "task": "Validate documents",
    "status": "25% Validate documents",
    "totalWork": 1000,
    "workDone": 250,
    "complete": false
}


[Trace - 10:29:31 AM] Received notification 'language/progressReport'.
Params: {
    "id": "1d35efdd-471c-436b-bbd8-76770d459782",
    "task": "Validate documents",
    "status": "50% Validate documents",
    "totalWork": 1000,
    "workDone": 500,
    "complete": false
}


[Trace - 10:29:31 AM] Received notification 'language/progressReport'.
Params: {
    "id": "1d35efdd-471c-436b-bbd8-76770d459782",
    "task": "Validate documents",
    "status": "50% Validate documents",
    "totalWork": 1000,
    "workDone": 500,
    "complete": true
}


[Trace - 10:29:31 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "status": "0% Building",
    "totalWork": 1000,
    "workDone": 0,
    "complete": false
}


[Trace - 10:29:31 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Compiling powerpro-persistence-test/src/main/java/db/uat",
    "status": "19% Building Compiling powerpro-persistence-test/src/main/java/db/uat",
    "totalWork": 1000,
    "workDone": 192,
    "complete": false
}


[Trace - 10:29:31 AM] Received notification 'language/progressReport'.
Params: {
    "id": "59e9f3b4-8d91-49c6-bc0d-df899a7eba88",
    "task": "Publish Diagnostics",
    "status": "0% Publish Diagnostics",
    "totalWork": 1000,
    "workDone": 0,
    "complete": false
}


[Trace - 10:29:31 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-persistence-test/target-ide/classes/rebel.xml'.",
    "status": "19% Building Refreshing '/powerpro-persistence-test/target-ide/classes/rebel.xml'.",
    "totalWork": 1000,
    "workDone": 194,
    "complete": false
}


[Trace - 10:29:32 AM] Received notification 'language/progressReport'.
Params: {
    "id": "59e9f3b4-8d91-49c6-bc0d-df899a7eba88",
    "task": "Publish Diagnostics",
    "status": "25% Publish Diagnostics",
    "totalWork": 1000,
    "workDone": 250,
    "complete": false
}


[Trace - 10:29:32 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Compiling powerpro-util/src/main/java/com/amazonaws/s3",
    "status": "34% Building Compiling powerpro-util/src/main/java/com/amazonaws/s3",
    "totalWork": 1000,
    "workDone": 342,
    "complete": false
}


[Trace - 10:29:32 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/CommunityTextController.java",
    "diagnostics": []
}


[Trace - 10:29:32 AM] Received notification 'language/progressReport'.
Params: {
    "id": "59e9f3b4-8d91-49c6-bc0d-df899a7eba88",
    "task": "Publish Diagnostics",
    "status": "50% Publish Diagnostics",
    "totalWork": 1000,
    "workDone": 500,
    "complete": true
}


[Trace - 10:29:33 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-util/target-ide/test-classes/logback-test.xml'.",
    "status": "36% Building Refreshing '/powerpro-util/target-ide/test-classes/logback-test.xml'.",
    "totalWork": 1000,
    "workDone": 355,
    "complete": false
}


[Trace - 10:29:34 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 1 warning) Compiling powerpro-model/src/main/java/com/powerpro/platform/dto",
    "status": "42% Building (Found 1 warning) Compiling powerpro-model/src/main/java/com/powerpro/platform/dto",
    "totalWork": 1000,
    "workDone": 424,
    "complete": false
}


[Trace - 10:29:35 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 13 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/community",
    "status": "43% Building (Found 13 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/community",
    "totalWork": 1000,
    "workDone": 426,
    "complete": false
}


[Trace - 10:29:35 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 40 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/community",
    "status": "43% Building (Found 40 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/community",
    "totalWork": 1000,
    "workDone": 428,
    "complete": false
}


[Trace - 10:29:35 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 40 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/guestcard",
    "status": "43% Building (Found 40 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/guestcard",
    "totalWork": 1000,
    "workDone": 430,
    "complete": false
}


[Trace - 10:29:35 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 42 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/rootaware",
    "status": "43% Building (Found 42 warnings) Compiling powerpro-model/src/main/java/com/powerpro/platform/model/rootaware",
    "totalWork": 1000,
    "workDone": 432,
    "complete": false
}


[Trace - 10:29:36 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 83 warnings) Compiling powerpro-model/target-ide/generated-sources/java/com/powerpro/platform/model/device",
    "status": "44% Building (Found 83 warnings) Compiling powerpro-model/target-ide/generated-sources/java/com/powerpro/platform/model/device",
    "totalWork": 1000,
    "workDone": 435,
    "complete": false
}


[Trace - 10:29:37 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-model/target-ide/classes/db/migration/V3_0__base_schema.sql'.",
    "status": "44% Building Refreshing '/powerpro-model/target-ide/classes/db/migration/V3_0__base_schema.sql'.",
    "totalWork": 1000,
    "workDone": 438,
    "complete": false
}


[Trace - 10:29:38 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 84 warnings) Compiling powerpro-persistence/src/main/java/com/powerpro/platform/config",
    "status": "51% Building (Found 84 warnings) Compiling powerpro-persistence/src/main/java/com/powerpro/platform/config",
    "totalWork": 1000,
    "workDone": 506,
    "complete": false
}


[Trace - 10:29:38 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-persistence/target-ide/classes/rebel.xml'.",
    "status": "52% Building Refreshing '/powerpro-persistence/target-ide/classes/rebel.xml'.",
    "totalWork": 1000,
    "workDone": 520,
    "complete": false
}


[Trace - 10:29:39 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 103 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/connector",
    "status": "59% Building (Found 103 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/connector",
    "totalWork": 1000,
    "workDone": 589,
    "complete": false
}


[Trace - 10:29:39 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 123 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/connector/rpx/model/tempuri",
    "status": "59% Building (Found 123 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/connector/rpx/model/tempuri",
    "totalWork": 1000,
    "workDone": 591,
    "complete": false
}


[Trace - 10:29:40 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 150 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/connector/yardi4/model/application",
    "status": "59% Building (Found 150 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/connector/yardi4/model/application",
    "totalWork": 1000,
    "workDone": 594,
    "complete": false
}


[Trace - 10:29:40 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 164 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/community",
    "status": "60% Building (Found 164 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/community",
    "totalWork": 1000,
    "workDone": 596,
    "complete": false
}


[Trace - 10:29:40 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 171 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/guestcard",
    "status": "60% Building (Found 171 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/guestcard",
    "totalWork": 1000,
    "workDone": 596,
    "complete": false
}


[Trace - 10:29:40 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 194 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/integration/dto",
    "status": "60% Building (Found 194 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/integration/dto",
    "totalWork": 1000,
    "workDone": 596,
    "complete": false
}


[Trace - 10:29:40 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 197 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/integration/yardi",
    "status": "60% Building (Found 197 warnings) Compiling powerpro-common/src/main/java/com/powerpro/platform/service/integration/yardi",
    "totalWork": 1000,
    "workDone": 597,
    "complete": false
}


[Trace - 10:29:41 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 201 warnings) Compiling powerpro-common/src/main/java/com/yardi/popcard",
    "status": "60% Building (Found 201 warnings) Compiling powerpro-common/src/main/java/com/yardi/popcard",
    "totalWork": 1000,
    "workDone": 597,
    "complete": false
}


[Trace - 10:29:41 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 201 warnings) Compiling powerpro-common/src/main/java/org/nmhc/leadmanagement20",
    "status": "60% Building (Found 201 warnings) Compiling powerpro-common/src/main/java/org/nmhc/leadmanagement20",
    "totalWork": 1000,
    "workDone": 599,
    "complete": false
}


[Trace - 10:29:41 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-common/target-ide/test-classes/rpx/getunitlist.response.xml'.",
    "status": "60% Building Refreshing '/powerpro-common/target-ide/test-classes/rpx/getunitlist.response.xml'.",
    "totalWork": 1000,
    "workDone": 603,
    "complete": false
}


[Trace - 10:29:42 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 201 warnings) Compiling powerpro-partner-api/src/main/java/com/powerpro/partnerapi",
    "status": "68% Building (Found 201 warnings) Compiling powerpro-partner-api/src/main/java/com/powerpro/partnerapi",
    "totalWork": 1000,
    "workDone": 675,
    "complete": false
}


[Trace - 10:29:44 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-partner-api/target-ide/classes/logback-spring.xml'.",
    "status": "70% Building Refreshing '/powerpro-partner-api/target-ide/classes/logback-spring.xml'.",
    "totalWork": 1000,
    "workDone": 697,
    "complete": false
}


[Trace - 10:29:44 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 206 warnings) Compiling powerpro-backend-api/src/main/java/com/powerpro/backend/api",
    "status": "76% Building (Found 206 warnings) Compiling powerpro-backend-api/src/main/java/com/powerpro/backend/api",
    "totalWork": 1000,
    "workDone": 756,
    "complete": false
}


[Trace - 10:29:46 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-backend-api/target-ide/appengine/Dockerfile'.",
    "status": "78% Building Refreshing '/powerpro-backend-api/target-ide/appengine/Dockerfile'.",
    "totalWork": 1000,
    "workDone": 779,
    "complete": false
}


[Trace - 10:29:46 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 208 warnings) Compiling powerpro-api/src/main/java/com/powerpro/platform/web",
    "status": "84% Building (Found 208 warnings) Compiling powerpro-api/src/main/java/com/powerpro/platform/web",
    "totalWork": 1000,
    "workDone": 839,
    "complete": false
}


[Trace - 10:29:48 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-api/target-ide/test-classes/json/guestcard/ipad-request.json'.",
    "status": "86% Building Refreshing '/powerpro-api/target-ide/test-classes/json/guestcard/ipad-request.json'.",
    "totalWork": 1000,
    "workDone": 862,
    "complete": false
}


[Trace - 10:29:48 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 229 warnings) Compiling powerpro-admin/src/main/java/com/powerpro/platform/web",
    "status": "92% Building (Found 229 warnings) Compiling powerpro-admin/src/main/java/com/powerpro/platform/web",
    "totalWork": 1000,
    "workDone": 920,
    "complete": false
}


[Trace - 10:29:48 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "(Found 314 warnings) Compiling powerpro-admin/src/main/java/com/powerpro/platform/web/formatter",
    "status": "93% Building (Found 314 warnings) Compiling powerpro-admin/src/main/java/com/powerpro/platform/web/formatter",
    "totalWork": 1000,
    "workDone": 927,
    "complete": false
}


[Trace - 10:29:49 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "Refreshing '/powerpro-admin/target-ide/classes/META-INF/build-info.properties'.",
    "status": "93% Building Refreshing '/powerpro-admin/target-ide/classes/META-INF/build-info.properties'.",
    "totalWork": 1000,
    "workDone": 933,
    "complete": false
}


[Trace - 10:29:49 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "",
    "status": "100% Building",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:49 AM] Received notification 'language/progressReport'.
Params: {
    "id": "d89cb291-77a7-41ff-b101-531eebffa19f",
    "task": "Building",
    "subTask": "",
    "status": "100% Building",
    "totalWork": 1000,
    "workDone": 1000,
    "complete": true
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/guestcard/ProspectiveTenantService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 144,
                    "character": 11
                },
                "end": {
                    "line": 144,
                    "character": 137
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Don't add bad data to every tenant in the system to satisfy one idiotic vendor's requirements. Do this in the connector."
        },
        {
            "range": {
                "start": {
                    "line": 242,
                    "character": 19
                },
                "end": {
                    "line": 242,
                    "character": 80
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should we make this a ResourceNotFoundException instead?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/FtpClient.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 212,
                    "character": 16
                },
                "end": {
                    "line": 212,
                    "character": 41
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method closeQuietly(InputStream) from the type IOUtils is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 22,
                    "character": 3
                },
                "end": {
                    "line": 22,
                    "character": 132
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Replace this with a community supported, stable, tested, robust solution. See https://commons.apache.org/proper/commons-net/"
        },
        {
            "range": {
                "start": {
                    "line": 194,
                    "character": 17
                },
                "end": {
                    "line": 194,
                    "character": 60
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Change this to return Optional<String>"
        },
        {
            "range": {
                "start": {
                    "line": 211,
                    "character": 11
                },
                "end": {
                    "line": 211,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Use try-with-resources instead of deprecated IOUtils.closeQuietly"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/voice/CallOperator.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 113,
                    "character": 7
                },
                "end": {
                    "line": 113,
                    "character": 21
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO add to DB"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiPropertyExtractor.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 18,
                    "character": 0
                },
                "end": {
                    "line": 18,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field YardiPropertyExtractor.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/CommunityMarketingSourceService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 181,
                    "character": 23
                },
                "end": {
                    "line": 181,
                    "character": 107
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Automatically create a new canonical marketing source if no matches are found."
        },
        {
            "range": {
                "start": {
                    "line": 216,
                    "character": 27
                },
                "end": {
                    "line": 216,
                    "character": 111
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Automatically create a new canonical marketing source if no matches are found."
        },
        {
            "range": {
                "start": {
                    "line": 281,
                    "character": 7
                },
                "end": {
                    "line": 281,
                    "character": 91
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove this when when marketing source syncing and existing data is cleaned up."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/api/DashboardController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 13,
                    "character": 7
                },
                "end": {
                    "line": 13,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 12
                },
                "end": {
                    "line": 64,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 91,
                    "character": 72
                },
                "end": {
                    "line": 91,
                    "character": 113
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method listCommunitiesByLastAvailabilitySync(int) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 75,
                    "character": 7
                },
                "end": {
                    "line": 75,
                    "character": 136
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Pick apart all this idiotic bullshit, we're not writing FORTRAN here. Put it into the correct services and add tests there."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/ImageController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 83,
                    "character": 14
                },
                "end": {
                    "line": 83,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Use the galleries already loaded above instead of going back to the database here."
        },
        {
            "range": {
                "start": {
                    "line": 108,
                    "character": 14
                },
                "end": {
                    "line": 108,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Use the galleries already loaded above instead of going back to the database here."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcInsertProspectConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 14,
                    "character": 0
                },
                "end": {
                    "line": 14,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcInsertProspectConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeRpxGuestCardConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 478,
                    "character": 11
                },
                "end": {
                    "line": 478,
                    "character": 68
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Test to make sure we're getting SHOWING types here?"
        },
        {
            "range": {
                "start": {
                    "line": 494,
                    "character": 11
                },
                "end": {
                    "line": 494,
                    "character": 87
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should we consider completing it \"now\" if the date/time is unavailable?"
        },
        {
            "range": {
                "start": {
                    "line": 93,
                    "character": 11
                },
                "end": {
                    "line": 93,
                    "character": 85
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove this once switching over to using interactions to track status"
        },
        {
            "range": {
                "start": {
                    "line": 121,
                    "character": 11
                },
                "end": {
                    "line": 121,
                    "character": 106
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO DateNeed is always at midnight like, 2018-05-01T00:00:00, we need to handle this properly."
        },
        {
            "range": {
                "start": {
                    "line": 365,
                    "character": 11
                },
                "end": {
                    "line": 365,
                    "character": 87
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should we consider completing it \"now\" if the date/time is unavailable?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi4/Yardi4GuestCardConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 163,
                    "character": 11
                },
                "end": {
                    "line": 163,
                    "character": 76
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should a cancel event also be sent for inactive guest cards?"
        },
        {
            "range": {
                "start": {
                    "line": 191,
                    "character": 15
                },
                "end": {
                    "line": 191,
                    "character": 136
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Confirm that this works for completed walkins. For new completed walkins this used to send \"0\" but this'll send \"\"."
        },
        {
            "range": {
                "start": {
                    "line": 204,
                    "character": 15
                },
                "end": {
                    "line": 204,
                    "character": 115
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Should we update/save the interaction so that it correctly reflects the date we sent to yardi?"
        },
        {
            "range": {
                "start": {
                    "line": 383,
                    "character": 11
                },
                "end": {
                    "line": 383,
                    "character": 63
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: https://github.com/powerpro/breach/issues/2739"
        },
        {
            "range": {
                "start": {
                    "line": 467,
                    "character": 11
                },
                "end": {
                    "line": 467,
                    "character": 90
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Investigate whether the target move in date could cause time zone issues."
        },
        {
            "range": {
                "start": {
                    "line": 482,
                    "character": 11
                },
                "end": {
                    "line": 482,
                    "character": 72
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider whether getDesiredRent() belongs in GuestCard."
        },
        {
            "range": {
                "start": {
                    "line": 493,
                    "character": 11
                },
                "end": {
                    "line": 493,
                    "character": 95
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: remove this hack once Yardi fixes their API to allow 0 bedrooms (i.e. Studios)"
        },
        {
            "range": {
                "start": {
                    "line": 497,
                    "character": 11
                },
                "end": {
                    "line": 497,
                    "character": 124
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Figure out if we're missing half baths by casting to an int, it seems like we would. Is this a Yardi quirk?"
        },
        {
            "range": {
                "start": {
                    "line": 501,
                    "character": 11
                },
                "end": {
                    "line": 501,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Try passing Yardi an empty node (so we don't need the null check)"
        },
        {
            "range": {
                "start": {
                    "line": 509,
                    "character": 11
                },
                "end": {
                    "line": 509,
                    "character": 56
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: This might also be better in GuestCard."
        },
        {
            "range": {
                "start": {
                    "line": 130,
                    "character": 23
                },
                "end": {
                    "line": 130,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Move this into the interactionSyncable check."
        },
        {
            "range": {
                "start": {
                    "line": 131,
                    "character": 23
                },
                "end": {
                    "line": 131,
                    "character": 83
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider making this impossible through better design."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/AmenitySerializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 40,
                    "character": 43
                },
                "end": {
                    "line": 40,
                    "character": 80
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        },
        {
            "range": {
                "start": {
                    "line": 48,
                    "character": 45
                },
                "end": {
                    "line": 48,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        },
        {
            "range": {
                "start": {
                    "line": 50,
                    "character": 41
                },
                "end": {
                    "line": 50,
                    "character": 78
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/guestcard/Interaction.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 535,
                    "character": 15
                },
                "end": {
                    "line": 535,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 543,
                    "character": 7
                },
                "end": {
                    "line": 543,
                    "character": 128
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Find all usages of this and see if it's appropriate to also ensure that scheduled date is not null. This is part of"
        },
        {
            "range": {
                "start": {
                    "line": 55,
                    "character": 3
                },
                "end": {
                    "line": 55,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider preventing the addition of Interactions to the GuestCard with dates prior to the"
        },
        {
            "range": {
                "start": {
                    "line": 113,
                    "character": 7
                },
                "end": {
                    "line": 113,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this private again once we're returning DTOs from all integration service searches."
        },
        {
            "range": {
                "start": {
                    "line": 133,
                    "character": 7
                },
                "end": {
                    "line": 133,
                    "character": 108
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this private when possible. We set UUID in two places when we get an object from the iPad."
        },
        {
            "range": {
                "start": {
                    "line": 139,
                    "character": 7
                },
                "end": {
                    "line": 139,
                    "character": 121
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this private when possible. Its still used to update an existing interaction from a remote interaction."
        },
        {
            "range": {
                "start": {
                    "line": 153,
                    "character": 7
                },
                "end": {
                    "line": 153,
                    "character": 119
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: If the Source enum isn't GuestCard specific, it probably should be moved into its own class. EntitySource?"
        },
        {
            "range": {
                "start": {
                    "line": 154,
                    "character": 7
                },
                "end": {
                    "line": 154,
                    "character": 126
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: After JPA mapping, remodel this to be an Enum (GuestCard.Source) again, with the right database column behind it."
        },
        {
            "range": {
                "start": {
                    "line": 207,
                    "character": 6
                },
                "end": {
                    "line": 207,
                    "character": 26
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Make this a Set"
        },
        {
            "range": {
                "start": {
                    "line": 299,
                    "character": 15
                },
                "end": {
                    "line": 299,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 303,
                    "character": 11
                },
                "end": {
                    "line": 303,
                    "character": 131
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: In the future we should not allow this to happen. Right now, we use the interactions returned by the connectors to"
        },
        {
            "range": {
                "start": {
                    "line": 312,
                    "character": 7
                },
                "end": {
                    "line": 312,
                    "character": 103
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make type non-nullable in the database and remove this method. Currently 72/13MM are null."
        },
        {
            "range": {
                "start": {
                    "line": 362,
                    "character": 11
                },
                "end": {
                    "line": 362,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider moving to TPK once we unravel the sync date mess (requires fixing SHOWs)"
        },
        {
            "range": {
                "start": {
                    "line": 411,
                    "character": 7
                },
                "end": {
                    "line": 411,
                    "character": 85
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: See if we can change this to use the InteractionType.FOLLOWUPS type list"
        },
        {
            "range": {
                "start": {
                    "line": 414,
                    "character": 11
                },
                "end": {
                    "line": 414,
                    "character": 86
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove the check for NOTES and instead check for valid followup types."
        },
        {
            "range": {
                "start": {
                    "line": 418,
                    "character": 7
                },
                "end": {
                    "line": 418,
                    "character": 43
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Rename to not be RPX Specific."
        },
        {
            "range": {
                "start": {
                    "line": 425,
                    "character": 15
                },
                "end": {
                    "line": 425,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 445,
                    "character": 10
                },
                "end": {
                    "line": 445,
                    "character": 91
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Guarantee Interactions have a GuestCard by using a required args constructor"
        },
        {
            "range": {
                "start": {
                    "line": 446,
                    "character": 10
                },
                "end": {
                    "line": 446,
                    "character": 95
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Figure out why creating a new lead results in a new, but empty InteractionResult"
        },
        {
            "range": {
                "start": {
                    "line": 450,
                    "character": 15
                },
                "end": {
                    "line": 450,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 470,
                    "character": 7
                },
                "end": {
                    "line": 470,
                    "character": 121
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Maybe throw our own exception when scheduling something with no date? That way calling code has to catch it."
        },
        {
            "range": {
                "start": {
                    "line": 471,
                    "character": 7
                },
                "end": {
                    "line": 471,
                    "character": 34
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Set up the Throwable."
        },
        {
            "range": {
                "start": {
                    "line": 474,
                    "character": 11
                },
                "end": {
                    "line": 474,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: (debatable) If null, default to guest card leasing agent."
        },
        {
            "range": {
                "start": {
                    "line": 525,
                    "character": 15
                },
                "end": {
                    "line": 525,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcUnitAvailabilityConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 0
                },
                "end": {
                    "line": 10,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcUnitAvailabilityConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcInsertProspectContactConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 15,
                    "character": 0
                },
                "end": {
                    "line": 15,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcInsertProspectContactConnector.log is not used"
        },
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 11
                },
                "end": {
                    "line": 34,
                    "character": 65
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: figure out response and determine insert success"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiMarketingSourceConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 42,
                    "character": 47
                },
                "end": {
                    "line": 42,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method toString() from the type ByteArrayOutputStream is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/Community.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 14,
                    "character": 7
                },
                "end": {
                    "line": 14,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 1377,
                    "character": 8
                },
                "end": {
                    "line": 1377,
                    "character": 26
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 1378,
                    "character": 29
                },
                "end": {
                    "line": 1378,
                    "character": 47
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 1378,
                    "character": 48
                },
                "end": {
                    "line": 1378,
                    "character": 66
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getSyncableTypes() from the type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 292,
                    "character": 7
                },
                "end": {
                    "line": 292,
                    "character": 64
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Rename to RealPage or a generic name (e.g. siteId)."
        },
        {
            "range": {
                "start": {
                    "line": 310,
                    "character": 7
                },
                "end": {
                    "line": 310,
                    "character": 50
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove this in release 5.10.7 or later"
        },
        {
            "range": {
                "start": {
                    "line": 318,
                    "character": 7
                },
                "end": {
                    "line": 318,
                    "character": 50
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove this in release 5.10.7 or later"
        },
        {
            "range": {
                "start": {
                    "line": 535,
                    "character": 7
                },
                "end": {
                    "line": 535,
                    "character": 97
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Replace with sync record logic. Be aware this is tangled up all over the admin site."
        },
        {
            "range": {
                "start": {
                    "line": 1239,
                    "character": 7
                },
                "end": {
                    "line": 1239,
                    "character": 124
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Make a business decision about whether maxUnitCost should nullable or always calculated from the existing units."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/FeatureService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 73,
                    "character": 7
                },
                "end": {
                    "line": 73,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move this to a UnitFeatureService since it also updates units?"
        },
        {
            "range": {
                "start": {
                    "line": 54,
                    "character": 19
                },
                "end": {
                    "line": 54,
                    "character": 133
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Discuss throwing an Exception here, or in the calling code handle a return set smaller than the list of IDs?"
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 7
                },
                "end": {
                    "line": 64,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move this to a UnitFeatureService since it also updates units?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/slack/SlackAttachment.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 3
                },
                "end": {
                    "line": 11,
                    "character": 67
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Consider replacing this with a thirdparty Slack Java client"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/AmenityDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 23,
                    "character": 30
                },
                "end": {
                    "line": 23,
                    "character": 67
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        },
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 37
                },
                "end": {
                    "line": 27,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        },
        {
            "range": {
                "start": {
                    "line": 28,
                    "character": 29
                },
                "end": {
                    "line": 28,
                    "character": 66
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/LeadAccessTokenController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 154,
                    "character": 73
                },
                "end": {
                    "line": 154,
                    "character": 84
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken.EmailFormat is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 58,
                    "character": 13
                },
                "end": {
                    "line": 58,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 94,
                    "character": 8
                },
                "end": {
                    "line": 94,
                    "character": 23
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 94,
                    "character": 42
                },
                "end": {
                    "line": 94,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 94,
                    "character": 42
                },
                "end": {
                    "line": 94,
                    "character": 74
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor LeadAccessToken(CommunityMarketingSource) is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 107,
                    "character": 8
                },
                "end": {
                    "line": 107,
                    "character": 23
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 118,
                    "character": 82
                },
                "end": {
                    "line": 118,
                    "character": 97
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 129,
                    "character": 64
                },
                "end": {
                    "line": 129,
                    "character": 84
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 141,
                    "character": 8
                },
                "end": {
                    "line": 141,
                    "character": 23
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 146,
                    "character": 63
                },
                "end": {
                    "line": 146,
                    "character": 83
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 154,
                    "character": 57
                },
                "end": {
                    "line": 154,
                    "character": 72
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/ext/ClientUnitController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 38,
                    "character": 18
                },
                "end": {
                    "line": 38,
                    "character": 27
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method isValid() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 39,
                    "character": 34
                },
                "end": {
                    "line": 39,
                    "character": 54
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 19,
                    "character": 3
                },
                "end": {
                    "line": 19,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move this to partner-api and redirect to there. We'll need to disable security for this route in partner-api."
        },
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 8
                },
                "end": {
                    "line": 34,
                    "character": 23
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/ReportService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 7
                },
                "end": {
                    "line": 11,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 70,
                    "character": 12
                },
                "end": {
                    "line": 70,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 197,
                    "character": 65
                },
                "end": {
                    "line": 197,
                    "character": 123
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getIdScannedFiveTimes(Long, Date, Set<String>) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 199,
                    "character": 62
                },
                "end": {
                    "line": 199,
                    "character": 103
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getNumberOfLeadsNotConverted(Long) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 113,
                    "character": 19
                },
                "end": {
                    "line": 113,
                    "character": 28
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO why?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiUnitConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 23,
                    "character": 0
                },
                "end": {
                    "line": 23,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field YardiUnitConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/amc/AmcProspectConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 89,
                    "character": 15
                },
                "end": {
                    "line": 89,
                    "character": 45
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Support \"REJ\" for \"lost\"?"
        },
        {
            "range": {
                "start": {
                    "line": 103,
                    "character": 11
                },
                "end": {
                    "line": 103,
                    "character": 132
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Downstream we have to decide how to set the loss reason based on the interaction result IDs on the InteractionDtos."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiAgentConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 40,
                    "character": 47
                },
                "end": {
                    "line": 40,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method toString() from the type ByteArrayOutputStream is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/UnitVariableRentSerializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 42,
                    "character": 47
                },
                "end": {
                    "line": 42,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method isActive() from the type UnitVariableRent is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/api/ReportController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 16,
                    "character": 7
                },
                "end": {
                    "line": 16,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 47,
                    "character": 12
                },
                "end": {
                    "line": 47,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 78,
                    "character": 13
                },
                "end": {
                    "line": 78,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 78,
                    "character": 51
                },
                "end": {
                    "line": 78,
                    "character": 582
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method executeReportQuery(String, Object[]) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 86,
                    "character": 13
                },
                "end": {
                    "line": 86,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 88,
                    "character": 54
                },
                "end": {
                    "line": 88,
                    "character": 58
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 89,
                    "character": 45
                },
                "end": {
                    "line": 89,
                    "character": 49
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 90,
                    "character": 45
                },
                "end": {
                    "line": 90,
                    "character": 49
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 152,
                    "character": 13
                },
                "end": {
                    "line": 152,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 152,
                    "character": 51
                },
                "end": {
                    "line": 152,
                    "character": 82
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method executeReportQuery(String, SqlParameterSource) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 154,
                    "character": 13
                },
                "end": {
                    "line": 154,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 156,
                    "character": 54
                },
                "end": {
                    "line": 156,
                    "character": 58
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 157,
                    "character": 45
                },
                "end": {
                    "line": 157,
                    "character": 49
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 158,
                    "character": 45
                },
                "end": {
                    "line": 158,
                    "character": 49
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 220,
                    "character": 13
                },
                "end": {
                    "line": 220,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 220,
                    "character": 51
                },
                "end": {
                    "line": 220,
                    "character": 82
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method executeReportQuery(String, SqlParameterSource) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 222,
                    "character": 13
                },
                "end": {
                    "line": 222,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 224,
                    "character": 54
                },
                "end": {
                    "line": 224,
                    "character": 58
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 225,
                    "character": 45
                },
                "end": {
                    "line": 225,
                    "character": 49
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 226,
                    "character": 45
                },
                "end": {
                    "line": 226,
                    "character": 49
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 280,
                    "character": 19
                },
                "end": {
                    "line": 280,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 282,
                    "character": 25
                },
                "end": {
                    "line": 282,
                    "character": 1073
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method executeReportQuery(String, Object[]) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 293,
                    "character": 19
                },
                "end": {
                    "line": 293,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 295,
                    "character": 59
                },
                "end": {
                    "line": 295,
                    "character": 63
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 295,
                    "character": 73
                },
                "end": {
                    "line": 295,
                    "character": 77
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 296,
                    "character": 40
                },
                "end": {
                    "line": 296,
                    "character": 44
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 296,
                    "character": 70
                },
                "end": {
                    "line": 296,
                    "character": 74
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 329,
                    "character": 13
                },
                "end": {
                    "line": 329,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 329,
                    "character": 51
                },
                "end": {
                    "line": 329,
                    "character": 713
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method executeReportQuery(String, Object[]) from the type ReportRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 341,
                    "character": 13
                },
                "end": {
                    "line": 341,
                    "character": 22
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 343,
                    "character": 55
                },
                "end": {
                    "line": 343,
                    "character": 59
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 343,
                    "character": 69
                },
                "end": {
                    "line": 343,
                    "character": 73
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 343,
                    "character": 94
                },
                "end": {
                    "line": 343,
                    "character": 98
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field ReportRow.data is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 14,
                    "character": 7
                },
                "end": {
                    "line": 14,
                    "character": 44
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRow is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/FloorPlanService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 65,
                    "character": 7
                },
                "end": {
                    "line": 65,
                    "character": 73
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Switch to using community.add behavior and save via cascade."
        },
        {
            "range": {
                "start": {
                    "line": 87,
                    "character": 19
                },
                "end": {
                    "line": 87,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO These are probably set elsewhere and are redundant here. We need to fix sync record handling."
        },
        {
            "range": {
                "start": {
                    "line": 138,
                    "character": 15
                },
                "end": {
                    "line": 138,
                    "character": 76
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: remove once Ian has our clients fix their data in Yardi"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeGuestCardConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 14
                },
                "end": {
                    "line": 2,
                    "character": 73
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import com.powerpro.platform.model.guestcard.InteractionType.EMAIL is never used"
        },
        {
            "range": {
                "start": {
                    "line": 82,
                    "character": 19
                },
                "end": {
                    "line": 82,
                    "character": 111
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Sending datefollowup as ISO8601 is questionable since no other RPX dates work that way."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/guestcard/ProspectiveTenant.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 433,
                    "character": 15
                },
                "end": {
                    "line": 433,
                    "character": 93
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We need to get to where we can reject all junk and clean up the database."
        },
        {
            "range": {
                "start": {
                    "line": 474,
                    "character": 7
                },
                "end": {
                    "line": 474,
                    "character": 62
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should be using the DTO everywhere for the API."
        },
        {
            "range": {
                "start": {
                    "line": 167,
                    "character": 6
                },
                "end": {
                    "line": 167,
                    "character": 89
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO state should be represented as a foreign key to a table containing all states."
        },
        {
            "range": {
                "start": {
                    "line": 174,
                    "character": 6
                },
                "end": {
                    "line": 174,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO country should be represented as a foreign key to a table containing all countries."
        },
        {
            "range": {
                "start": {
                    "line": 198,
                    "character": 7
                },
                "end": {
                    "line": 198,
                    "character": 35
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert this to an ENUM"
        },
        {
            "range": {
                "start": {
                    "line": 239,
                    "character": 6
                },
                "end": {
                    "line": 239,
                    "character": 40
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert this to a Date object"
        },
        {
            "range": {
                "start": {
                    "line": 244,
                    "character": 11
                },
                "end": {
                    "line": 244,
                    "character": 92
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert to using the actual UUID object instead of the non type-save String."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/backend-api/src/main/java/com/powerpro/backend/api/controller/task/CommunityTaskController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 73,
                    "character": 8
                },
                "end": {
                    "line": 73,
                    "character": 26
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/Feature.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 56,
                    "character": 6
                },
                "end": {
                    "line": 56,
                    "character": 55
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert this field to use the Category enum."
        },
        {
            "range": {
                "start": {
                    "line": 59,
                    "character": 106
                },
                "end": {
                    "line": 59,
                    "character": 141
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Can the enum be used for this?"
        },
        {
            "range": {
                "start": {
                    "line": 148,
                    "character": 15
                },
                "end": {
                    "line": 148,
                    "character": 67
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Use this once the field is no longer nullable."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/util/src/main/java/com/amazonaws/s3/Contents.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 13,
                    "character": 36
                },
                "end": {
                    "line": 13,
                    "character": 51
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO timestamp?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/UnitVariableRent.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 28,
                    "character": 7
                },
                "end": {
                    "line": 28,
                    "character": 75
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Apparently this is only here because the iPad client uses it to"
        },
        {
            "range": {
                "start": {
                    "line": 57,
                    "character": 6
                },
                "end": {
                    "line": 57,
                    "character": 66
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Add rent, leaseTerm and the rest of the required fields"
        },
        {
            "range": {
                "start": {
                    "line": 59,
                    "character": 10
                },
                "end": {
                    "line": 59,
                    "character": 150
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This is a workaround for connectors not guaranteeing the Unit yet. We need to fix that first. Reference YieldStarVariableRentConnector."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/ImportController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 109
                },
                "end": {
                    "line": 41,
                    "character": 127
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 128
                },
                "end": {
                    "line": 41,
                    "character": 136
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 42,
                    "character": 92
                },
                "end": {
                    "line": 42,
                    "character": 110
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 42,
                    "character": 111
                },
                "end": {
                    "line": 42,
                    "character": 122
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI_V4 is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 43,
                    "character": 92
                },
                "end": {
                    "line": 43,
                    "character": 110
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 43,
                    "character": 111
                },
                "end": {
                    "line": 43,
                    "character": 114
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.AMC is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 146,
                    "character": 30
                },
                "end": {
                    "line": 146,
                    "character": 62
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method setRemoteReservingEnabled(boolean) from the type Community is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 144,
                    "character": 15
                },
                "end": {
                    "line": 144,
                    "character": 41
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: prompt for this info"
        },
        {
            "range": {
                "start": {
                    "line": 6,
                    "character": 7
                },
                "end": {
                    "line": 6,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/InteractionResultService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 149,
                    "character": 7
                },
                "end": {
                    "line": 149,
                    "character": 106
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Create a hidden flag (if this is a required business case) to account for this third meaning."
        },
        {
            "range": {
                "start": {
                    "line": 436,
                    "character": 11
                },
                "end": {
                    "line": 436,
                    "character": 71
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider adding the rejected count to the MergeResult."
        },
        {
            "range": {
                "start": {
                    "line": 63,
                    "character": 7
                },
                "end": {
                    "line": 63,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 74,
                    "character": 7
                },
                "end": {
                    "line": 74,
                    "character": 129
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Handle SyncRecords in here instead of anywhere in the integration-specific code, so they're universal (as intended)."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/amc/AmcService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 158,
                    "character": 7
                },
                "end": {
                    "line": 158,
                    "character": 135
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: See if we can count on this guest card always being associated with the correct community, then getting rid of that param."
        },
        {
            "range": {
                "start": {
                    "line": 282,
                    "character": 23
                },
                "end": {
                    "line": 282,
                    "character": 90
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Adding more details about the error to this log would be nice."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcConnectorBase.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 78
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 32,
                    "character": 0
                },
                "end": {
                    "line": 32,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcConnectorBase.log is not used"
        },
        {
            "range": {
                "start": {
                    "line": 53,
                    "character": 48
                },
                "end": {
                    "line": 53,
                    "character": 87
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 53,
                    "character": 48
                },
                "end": {
                    "line": 53,
                    "character": 89
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor UrlFetchHttpsUrlConnectionMessageSender() is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 7
                },
                "end": {
                    "line": 46,
                    "character": 123
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Is the custom message sender still needed? We're not on a non-compat runtime and cleaned up the code somewhat."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcUpdateProspectConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 14,
                    "character": 0
                },
                "end": {
                    "line": 14,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcUpdateProspectConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiPropertyConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 4
                },
                "end": {
                    "line": 26,
                    "character": 76
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Move this into the Yardi4 package and use the Yardi4Connectorbase."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/community/CommunityRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 6,
                    "character": 7
                },
                "end": {
                    "line": 6,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 39,
                    "character": 19
                },
                "end": {
                    "line": 39,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target-ide/generated-sources/java/com/powerpro/platform/model/community/QLeadAccessToken.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 16,
                    "character": 53
                },
                "end": {
                    "line": 16,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 26
                },
                "end": {
                    "line": 34,
                    "character": 41
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 42
                },
                "end": {
                    "line": 34,
                    "character": 53
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken.EmailFormat is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 95
                },
                "end": {
                    "line": 34,
                    "character": 110
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 111
                },
                "end": {
                    "line": 34,
                    "character": 122
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken.EmailFormat is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 45,
                    "character": 13
                },
                "end": {
                    "line": 45,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 48,
                    "character": 43
                },
                "end": {
                    "line": 48,
                    "character": 58
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 57,
                    "character": 13
                },
                "end": {
                    "line": 57,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 60,
                    "character": 44
                },
                "end": {
                    "line": 60,
                    "character": 59
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/LeadController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 113,
                    "character": 50
                },
                "end": {
                    "line": 113,
                    "character": 70
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 64
                },
                "end": {
                    "line": 114,
                    "character": 84
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 125,
                    "character": 70
                },
                "end": {
                    "line": 125,
                    "character": 130
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: This should be tracked in a conditions system. (#3514)"
        },
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 7
                },
                "end": {
                    "line": 10,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 106,
                    "character": 12
                },
                "end": {
                    "line": 106,
                    "character": 27
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/CommunitySyncSummary.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 6
                },
                "end": {
                    "line": 26,
                    "character": 49
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We can probably map this to Community."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeRpxFloorPlanConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 39,
                    "character": 19
                },
                "end": {
                    "line": 39,
                    "character": 85
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be done at the service layer when that's possible"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/UnitService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 229,
                    "character": 15
                },
                "end": {
                    "line": 229,
                    "character": 65
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: add some logic to create a missing unit here"
        },
        {
            "range": {
                "start": {
                    "line": 253,
                    "character": 18
                },
                "end": {
                    "line": 253,
                    "character": 139
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This seems irresponsible. This means no values will be updated for models including rent, deposit, unit number, etc."
        },
        {
            "range": {
                "start": {
                    "line": 264,
                    "character": 23
                },
                "end": {
                    "line": 264,
                    "character": 123
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Once this object is loaded via Hibernate, we can use a merge to simply update the data and let"
        },
        {
            "range": {
                "start": {
                    "line": 54,
                    "character": 30
                },
                "end": {
                    "line": 54,
                    "character": 109
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method findFirstByCommunityAndBuildingNumberAndUnitNumber(Community, String, String) from the type UnitRepository is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 58,
                    "character": 30
                },
                "end": {
                    "line": 58,
                    "character": 82
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method findFirstByCommunityAndUnitNumber(Community, String) from the type UnitRepository is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/EnhancedJpaRepositoryImpl.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 22,
                    "character": 75
                },
                "end": {
                    "line": 22,
                    "character": 96
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type QuerydslJpaRepository<T,ID> is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 30,
                    "character": 8
                },
                "end": {
                    "line": 30,
                    "character": 48
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor QuerydslJpaRepository<T,ID>(JpaEntityInformation<T,ID>, EntityManager) is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 10
                },
                "end": {
                    "line": 46,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This maintains legacy BaseDao behavior. It should be removed as soon as convenient."
        },
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 76
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type QuerydslJpaRepository<T,ID> is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/lro/LroFtpClient.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 35,
                    "character": 15
                },
                "end": {
                    "line": 35,
                    "character": 77
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove all but the latest source file from the FTP server"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/QuoteEmailController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 95,
                    "character": 11
                },
                "end": {
                    "line": 95,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO The two cost fields are mutually exclusive so make sure they are not both set once"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/partner-api/src/main/java/com/powerpro/partnerapi/web/config/AppConfig.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 7
                },
                "end": {
                    "line": 27,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should be able to remove this, but it will require changing the logback config."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi/YardiGuestCardConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 14
                },
                "end": {
                    "line": 2,
                    "character": 58
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import org.apache.commons.lang3.StringUtils.isBlank is never used"
        },
        {
            "range": {
                "start": {
                    "line": 164,
                    "character": 15
                },
                "end": {
                    "line": 164,
                    "character": 99
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: remove this hack once Yardi fixes their API to allow 0 bedrooms (i.e. Studios)"
        },
        {
            "range": {
                "start": {
                    "line": 403,
                    "character": 11
                },
                "end": {
                    "line": 403,
                    "character": 76
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should a cancel event also be sent for inactive guest cards?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/guestcard/GuestCardService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 1025,
                    "character": 19
                },
                "end": {
                    "line": 1025,
                    "character": 90
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be a condition on the guest card and/or the community."
        },
        {
            "range": {
                "start": {
                    "line": 1217,
                    "character": 7
                },
                "end": {
                    "line": 1217,
                    "character": 109
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Find a clear/elegant way to fall back to the default loss reason for all three situations below."
        },
        {
            "range": {
                "start": {
                    "line": 30,
                    "character": 7
                },
                "end": {
                    "line": 30,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 851,
                    "character": 102
                },
                "end": {
                    "line": 851,
                    "character": 120
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 851,
                    "character": 121
                },
                "end": {
                    "line": 851,
                    "character": 129
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 174,
                    "character": 7
                },
                "end": {
                    "line": 174,
                    "character": 40
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Move this to BedBathService"
        },
        {
            "range": {
                "start": {
                    "line": 207,
                    "character": 11
                },
                "end": {
                    "line": 207,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should use the ObjectMapper from the Spring context instead."
        },
        {
            "range": {
                "start": {
                    "line": 848,
                    "character": 7
                },
                "end": {
                    "line": 848,
                    "character": 78
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove this condition once YARDIAPI integration has been shutdown."
        },
        {
            "range": {
                "start": {
                    "line": 928,
                    "character": 23
                },
                "end": {
                    "line": 928,
                    "character": 72
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be a condition on the guest card"
        },
        {
            "range": {
                "start": {
                    "line": 1020,
                    "character": 19
                },
                "end": {
                    "line": 1020,
                    "character": 90
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be a condition on the guest card and/or the community."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/LoginController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 61,
                    "character": 10
                },
                "end": {
                    "line": 61,
                    "character": 99
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should the max unit cost be set here just like it is in the API CommunityController?"
        },
        {
            "range": {
                "start": {
                    "line": 75,
                    "character": 10
                },
                "end": {
                    "line": 75,
                    "character": 69
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO What if there are other users with the same user name?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi/YardiService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 134,
                    "character": 15
                },
                "end": {
                    "line": 134,
                    "character": 102
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO IntegrationException is too generic. We need to make this something more specific."
        },
        {
            "range": {
                "start": {
                    "line": 274,
                    "character": 11
                },
                "end": {
                    "line": 274,
                    "character": 67
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider making all the converters autowired/able."
        },
        {
            "range": {
                "start": {
                    "line": 330,
                    "character": 15
                },
                "end": {
                    "line": 330,
                    "character": 102
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO IntegrationException is too generic. We need to make this something more specific."
        },
        {
            "range": {
                "start": {
                    "line": 347,
                    "character": 11
                },
                "end": {
                    "line": 347,
                    "character": 49
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: add this to the property manager"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi4/Yardi4UnitConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 51,
                    "character": 15
                },
                "end": {
                    "line": 51,
                    "character": 110
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Throw an exception here instead of returning null, or wrap this whole mess in an if/else."
        },
        {
            "range": {
                "start": {
                    "line": 57,
                    "character": 15
                },
                "end": {
                    "line": 57,
                    "character": 110
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Throw an exception here instead of returning null, or wrap this whole mess in an if/else."
        },
        {
            "range": {
                "start": {
                    "line": 75,
                    "character": 11
                },
                "end": {
                    "line": 75,
                    "character": 119
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: We need to return the FloorPlan (but a FloorPlanDTO) to the calling code, which can intelligently make"
        },
        {
            "range": {
                "start": {
                    "line": 108,
                    "character": 11
                },
                "end": {
                    "line": 108,
                    "character": 119
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: This could be more elegant, but we need a quick fix for an NPE here, and for now the simplest solution"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeUnitObjectConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 96,
                    "character": 61
                },
                "end": {
                    "line": 96,
                    "character": 90
                }
            },
            "severity": 2,
            "code": "1200",
            "source": "Java",
            "message": "Unlikely argument type String for get(Object) on a Map<Long,String>"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/ext/LeadGuestCardController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 137,
                    "character": 119
                },
                "end": {
                    "line": 137,
                    "character": 135
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getAccessToken() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 44,
                    "character": 3
                },
                "end": {
                    "line": 44,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move this to partner-api and redirect to there. We'll need to disable security for this route in partner-api."
        },
        {
            "range": {
                "start": {
                    "line": 118,
                    "character": 10
                },
                "end": {
                    "line": 118,
                    "character": 83
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This seems totally redundant can it just be removed? See issue #1859"
        },
        {
            "range": {
                "start": {
                    "line": 152,
                    "character": 57
                },
                "end": {
                    "line": 152,
                    "character": 86
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO split logic needed here."
        },
        {
            "range": {
                "start": {
                    "line": 177,
                    "character": 15
                },
                "end": {
                    "line": 177,
                    "character": 96
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be a condition on the community and the lead should be rejected."
        },
        {
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 92,
                    "character": 8
                },
                "end": {
                    "line": 92,
                    "character": 23
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 95,
                    "character": 36
                },
                "end": {
                    "line": 95,
                    "character": 45
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method isValid() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 101,
                    "character": 36
                },
                "end": {
                    "line": 101,
                    "character": 56
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 117,
                    "character": 54
                },
                "end": {
                    "line": 117,
                    "character": 74
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 119,
                    "character": 38
                },
                "end": {
                    "line": 119,
                    "character": 58
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 128,
                    "character": 118
                },
                "end": {
                    "line": 128,
                    "character": 134
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getAccessToken() from the type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi/YardiUnitConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 51,
                    "character": 15
                },
                "end": {
                    "line": 51,
                    "character": 110
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Throw an exception here instead of returning null, or wrap this whole mess in an if/else."
        },
        {
            "range": {
                "start": {
                    "line": 67,
                    "character": 11
                },
                "end": {
                    "line": 67,
                    "character": 119
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: We need to return the FloorPlan (but a FloorPlanDTO) to the calling code, which can intelligently make"
        },
        {
            "range": {
                "start": {
                    "line": 100,
                    "character": 11
                },
                "end": {
                    "line": 100,
                    "character": 119
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: This could be more elegant, but we need a quick fix for an NPE here, and for now the simplest solution"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/amc/AmcInsertProspectConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant CONV2GSTCRD needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant KEEPASLEAD needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant LETTER needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant LOSTNOTQUAL needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant NOTES needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant QUOTE needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant SELF_CHECK_IN needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant SHOWING needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant SMS needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 16
                },
                "end": {
                    "line": 114,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant WALKIN needs a corresponding case label in this enum switch on InteractionType"
        },
        {
            "range": {
                "start": {
                    "line": 44,
                    "character": 15
                },
                "end": {
                    "line": 44,
                    "character": 75
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: remove this once AMC updates their system requirements"
        },
        {
            "range": {
                "start": {
                    "line": 50,
                    "character": 10
                },
                "end": {
                    "line": 50,
                    "character": 48
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: localize to community's timezone"
        },
        {
            "range": {
                "start": {
                    "line": 66,
                    "character": 15
                },
                "end": {
                    "line": 66,
                    "character": 106
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This code runs for update too so why would we only ever look at the first interaction?"
        },
        {
            "range": {
                "start": {
                    "line": 77,
                    "character": 10
                },
                "end": {
                    "line": 77,
                    "character": 45
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: set correct next contact date"
        },
        {
            "range": {
                "start": {
                    "line": 79,
                    "character": 11
                },
                "end": {
                    "line": 79,
                    "character": 32
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Use PetType Enum"
        },
        {
            "range": {
                "start": {
                    "line": 109,
                    "character": 7
                },
                "end": {
                    "line": 109,
                    "character": 32
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Use ContactType Enum"
        },
        {
            "range": {
                "start": {
                    "line": 111,
                    "character": 11
                },
                "end": {
                    "line": 111,
                    "character": 80
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO we shouldn't be using 1ST for every walk-in or for default below"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/QuoteController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 70,
                    "character": 7
                },
                "end": {
                    "line": 70,
                    "character": 83
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Someday use a JSON body for the input instead of x-www-form-urlencoded."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/dto/InteractionResultDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 13,
                    "character": 7
                },
                "end": {
                    "line": 13,
                    "character": 64
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this not be a primitive so it can be nullable."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/ServiceConfig.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 65,
                    "character": 11
                },
                "end": {
                    "line": 65,
                    "character": 95
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Switch to using Auth0 to authenticate our requests to the queue proxy service."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/util/src/main/java/com/powerpro/platform/util/StringTemplateUtil.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 19,
                    "character": 7
                },
                "end": {
                    "line": 19,
                    "character": 115
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be replaced with a real template engine when we have time for that discussion and decision."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/system/ConditionType.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 51,
                    "character": 8
                },
                "end": {
                    "line": 51,
                    "character": 65
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider adding a severity indication of some sort."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/util/src/main/java/com/powerpro/platform/util/EnvUtil.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 6,
                    "character": 2
                },
                "end": {
                    "line": 6,
                    "character": 106
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert this to a @Service so we can get rid of these static methods and tests around it with mocks"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/guestcard/GuestCardRepositoryImpl.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 38,
                    "character": 83
                },
                "end": {
                    "line": 38,
                    "character": 89
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.MANUAL is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 38,
                    "character": 64
                },
                "end": {
                    "line": 38,
                    "character": 82
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcAvailableLeaseTermsConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 0
                },
                "end": {
                    "line": 10,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcAvailableLeaseTermsConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiLeaseApplicationConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 20,
                    "character": 0
                },
                "end": {
                    "line": 20,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field YardiLeaseApplicationConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4ServerTimeConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 8,
                    "character": 0
                },
                "end": {
                    "line": 8,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4ServerTimeConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/slack/SlackConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 3
                },
                "end": {
                    "line": 26,
                    "character": 72
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Consider replacing this with a thirdparty Slack API Java client."
        },
        {
            "range": {
                "start": {
                    "line": 28,
                    "character": 3
                },
                "end": {
                    "line": 28,
                    "character": 71
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert this to a service class that wraps a Slack Java client."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/guestcard/InteractionType.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 22,
                    "character": 7
                },
                "end": {
                    "line": 22,
                    "character": 89
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Only used for reporting. Quotes still need to be converted to an interaction."
        },
        {
            "range": {
                "start": {
                    "line": 61,
                    "character": 11
                },
                "end": {
                    "line": 61,
                    "character": 63
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Use this once the field is no longer nullable."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/SoapConnectorBase.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 155,
                    "character": 11
                },
                "end": {
                    "line": 155,
                    "character": 150
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: determine if this logic should just be part of DateUtil.oneSiteToTimestamp() which is used for extractors in OneSite's UnitConnectors"
        },
        {
            "range": {
                "start": {
                    "line": 71,
                    "character": 52
                },
                "end": {
                    "line": 71,
                    "character": 91
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 71,
                    "character": 52
                },
                "end": {
                    "line": 71,
                    "character": 111
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor UrlFetchHttpsUrlConnectionMessageSender(String, String) is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 73,
                    "character": 52
                },
                "end": {
                    "line": 73,
                    "character": 91
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 73,
                    "character": 52
                },
                "end": {
                    "line": 73,
                    "character": 93
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor UrlFetchHttpsUrlConnectionMessageSender() is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/guestcard/Quote.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 44,
                    "character": 2
                },
                "end": {
                    "line": 44,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Take out uuid, but we need take a deeper look into uniqueness and constraints in another pass"
        },
        {
            "range": {
                "start": {
                    "line": 101,
                    "character": 7
                },
                "end": {
                    "line": 101,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Quote is intended to be immutable so LeaseTerm should be replaced with lease term lenth."
        },
        {
            "range": {
                "start": {
                    "line": 108,
                    "character": 7
                },
                "end": {
                    "line": 108,
                    "character": 105
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Quote is intended to be immutable so Unit should be replaced with promotion, apt number, etc."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/model/LeadViewModel.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 105,
                    "character": 11
                },
                "end": {
                    "line": 105,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should be using java.time types anyway and then fix this issue."
        },
        {
            "range": {
                "start": {
                    "line": 109,
                    "character": 11
                },
                "end": {
                    "line": 109,
                    "character": 68
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should use view models for all of these entities."
        },
        {
            "range": {
                "start": {
                    "line": 119,
                    "character": 11
                },
                "end": {
                    "line": 119,
                    "character": 67
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should use a view model for all entities in JSP."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/partner-api/src/main/java/com/powerpro/partnerapi/web/dto/FollowupDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 30,
                    "character": 11
                },
                "end": {
                    "line": 30,
                    "character": 96
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Consider setting the other fields in the future if we need them in the response."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiUnitAvailabilityConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 31,
                    "character": 53
                },
                "end": {
                    "line": 31,
                    "character": 92
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 31,
                    "character": 53
                },
                "end": {
                    "line": 31,
                    "character": 100
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor UrlFetchHttpsUrlConnectionMessageSender(int) is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 49,
                    "character": 47
                },
                "end": {
                    "line": 49,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method toString() from the type ByteArrayOutputStream is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 14
                },
                "end": {
                    "line": 64,
                    "character": 128
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Collapse all of these down to a single catch of WebServiceException when we don't need to log the root cause."
        },
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 78
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/util/src/main/java/com/powerpro/platform/util/XMLUtil.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 10
                },
                "end": {
                    "line": 27,
                    "character": 68
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Enable removing null nodes automatically or fix them."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/guestcard/GuestCard.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 458,
                    "character": 15
                },
                "end": {
                    "line": 458,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 464,
                    "character": 15
                },
                "end": {
                    "line": 464,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 502,
                    "character": 15
                },
                "end": {
                    "line": 502,
                    "character": 104
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Stop storing calculable values like idiots and remove this field from the database."
        },
        {
            "range": {
                "start": {
                    "line": 511,
                    "character": 15
                },
                "end": {
                    "line": 511,
                    "character": 138
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Once we're confident in the connectors and syncing for these, enforce this by throwing an illegal argument exception."
        },
        {
            "range": {
                "start": {
                    "line": 634,
                    "character": 15
                },
                "end": {
                    "line": 634,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 676,
                    "character": 15
                },
                "end": {
                    "line": 676,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 702,
                    "character": 15
                },
                "end": {
                    "line": 702,
                    "character": 108
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Enforce all of these checks to simplify handling guest card status via InteractionResult"
        },
        {
            "range": {
                "start": {
                    "line": 823,
                    "character": 7
                },
                "end": {
                    "line": 823,
                    "character": 123
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: If the Source enum isn't GuestCard specific, (we're using it on an Interaction) then move it out of GuestCard."
        },
        {
            "range": {
                "start": {
                    "line": 866,
                    "character": 15
                },
                "end": {
                    "line": 866,
                    "character": 69
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: need a more absolute way to use the  most recent"
        },
        {
            "range": {
                "start": {
                    "line": 1024,
                    "character": 7
                },
                "end": {
                    "line": 1024,
                    "character": 131
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Figure out what to do if we get a parameter value of 0. This would match any newly-constructed Interaction in the set,"
        },
        {
            "range": {
                "start": {
                    "line": 1105,
                    "character": 7
                },
                "end": {
                    "line": 1105,
                    "character": 92
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We need to be able to guarantee a guest card always has a completed interaction."
        },
        {
            "range": {
                "start": {
                    "line": 1160,
                    "character": 11
                },
                "end": {
                    "line": 1160,
                    "character": 113
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Replace the legacy status with the modern status once it has been fully implemented and verified."
        },
        {
            "range": {
                "start": {
                    "line": 1195,
                    "character": 11
                },
                "end": {
                    "line": 1195,
                    "character": 105
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should be able to remove these null checks when they can be guaranteed to have values."
        },
        {
            "range": {
                "start": {
                    "line": 1336,
                    "character": 15
                },
                "end": {
                    "line": 1336,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 1346,
                    "character": 15
                },
                "end": {
                    "line": 1346,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 1356,
                    "character": 15
                },
                "end": {
                    "line": 1356,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 1366,
                    "character": 15
                },
                "end": {
                    "line": 1366,
                    "character": 100
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just throw this in the future once the system is ready for that level of rigor."
        },
        {
            "range": {
                "start": {
                    "line": 1379,
                    "character": 7
                },
                "end": {
                    "line": 1379,
                    "character": 121
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Try to eliminate this logic by making it impossible to have/import a guest card without a first interaction."
        },
        {
            "range": {
                "start": {
                    "line": 82,
                    "character": 3
                },
                "end": {
                    "line": 82,
                    "character": 125
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove ID from this, its really just meta data. We're leaving it for now for extra safety, but it could cause issues."
        },
        {
            "range": {
                "start": {
                    "line": 209,
                    "character": 32
                },
                "end": {
                    "line": 209,
                    "character": 96
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO re-enabled this once LeadController doesn't need the setter"
        },
        {
            "range": {
                "start": {
                    "line": 214,
                    "character": 7
                },
                "end": {
                    "line": 214,
                    "character": 73
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Fix the null values in the dababase? Should they be nullable?"
        },
        {
            "range": {
                "start": {
                    "line": 232,
                    "character": 6
                },
                "end": {
                    "line": 232,
                    "character": 71
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Test the proper mapping of datetime column type to Timestamp"
        },
        {
            "range": {
                "start": {
                    "line": 236,
                    "character": 6
                },
                "end": {
                    "line": 236,
                    "character": 71
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Test the proper mapping of datetime column type to Timestamp"
        },
        {
            "range": {
                "start": {
                    "line": 333,
                    "character": 7
                },
                "end": {
                    "line": 333,
                    "character": 133
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: When we refactor the connectors to better separate retrieval, parsing, and conversion of XML, add the leasing consultant"
        },
        {
            "range": {
                "start": {
                    "line": 335,
                    "character": 7
                },
                "end": {
                    "line": 335,
                    "character": 121
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Switch to UUID object instead of string to prevent idiots from passing in crap like \"ThisIsNotAFreakingUuid\""
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yieldstar/YieldStarFtpConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 56,
                    "character": 7
                },
                "end": {
                    "line": 56,
                    "character": 116
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO FtpClient is not thread-safe. We should new it was we use it. See the LroFtpClient for a better example."
        },
        {
            "range": {
                "start": {
                    "line": 143,
                    "character": 11
                },
                "end": {
                    "line": 143,
                    "character": 56
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - delete source file from the FTP server"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiMarketingSourceExtractor.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 20,
                    "character": 0
                },
                "end": {
                    "line": 20,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field YardiMarketingSourceExtractor.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/LeadAccessToken.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 103,
                    "character": 18
                },
                "end": {
                    "line": 103,
                    "character": 79
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This field is unused except for display in the admin UI."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/web/email/QuoteEmailBuilder.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 328,
                    "character": 15
                },
                "end": {
                    "line": 328,
                    "character": 115
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This seems like it should be in the community time zone since its used for display in an email?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcClient.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 7
                },
                "end": {
                    "line": 27,
                    "character": 121
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider returning wrapper objects that include the request and response, so this client is fully stateless."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/api/SyncController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 215,
                    "character": 90
                },
                "end": {
                    "line": 215,
                    "character": 101
                }
            },
            "severity": 2,
            "code": "16777788",
            "source": "Java",
            "message": "MergeResult is a raw type. References to generic type MergeResult<T> should be parameterized"
        },
        {
            "range": {
                "start": {
                    "line": 39,
                    "character": 3
                },
                "end": {
                    "line": 39,
                    "character": 91
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO These endpoints should be under /api since they're called by ajax from the admin ui"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/partner-api/src/main/java/com/powerpro/partnerapi/web/controller/ProspectSurveyController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 54
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import com.powerpro.platform.model.community.Community is never used"
        },
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 7
                },
                "end": {
                    "line": 11,
                    "character": 67
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import com.powerpro.platform.model.guestcard.ProspectSurveyResponse is never used"
        },
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 7
                },
                "end": {
                    "line": 12,
                    "character": 62
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import com.powerpro.platform.model.guestcard.ProspectiveTenant is never used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/QueueService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 85,
                    "character": 15
                },
                "end": {
                    "line": 85,
                    "character": 118
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO throw new TaskQueueException but that will require extensive refactoring everywhere this is called"
        },
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 29,
                    "character": 47
                },
                "end": {
                    "line": 29,
                    "character": 65
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 48
                },
                "end": {
                    "line": 33,
                    "character": 66
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 39,
                    "character": 72
                },
                "end": {
                    "line": 39,
                    "character": 90
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 40,
                    "character": 34
                },
                "end": {
                    "line": 40,
                    "character": 43
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getName() from the type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi/YardiIlsUnitConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 42,
                    "character": 15
                },
                "end": {
                    "line": 42,
                    "character": 75
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Throw a conversion exception or something better here."
        },
        {
            "range": {
                "start": {
                    "line": 50,
                    "character": 15
                },
                "end": {
                    "line": 50,
                    "character": 75
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Throw a conversion exception or something better here."
        },
        {
            "range": {
                "start": {
                    "line": 30,
                    "character": 15
                },
                "end": {
                    "line": 30,
                    "character": 75
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Throw a conversion exception or something better here."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/LeadService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 209,
                    "character": 11
                },
                "end": {
                    "line": 209,
                    "character": 61
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Make this an object relationship in Hibernate"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/parser/lead/ForRentEmailParser.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 71,
                    "character": 7
                },
                "end": {
                    "line": 71,
                    "character": 104
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO These dates should be in the community zone, but were always in system which is UTC on prod."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yieldstar/YieldStarVariableRentConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 82,
                    "character": 22
                },
                "end": {
                    "line": 82,
                    "character": 126
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO As a business rule we should be able to guarantee the Unit is set before creating UnitVariableRent."
        },
        {
            "range": {
                "start": {
                    "line": 103,
                    "character": 35
                },
                "end": {
                    "line": 103,
                    "character": 111
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should become a system notification when that feature is available"
        },
        {
            "range": {
                "start": {
                    "line": 75,
                    "character": 27
                },
                "end": {
                    "line": 75,
                    "character": 128
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: This is probably a bug. Intended to continue out of the process entirely, but it won't, it will"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/config/PowerproPersistenceConfig.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type ReportRepository is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/PoxConnectorBase.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 48
                },
                "end": {
                    "line": 27,
                    "character": 117
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor UrlFetchHttpsUrlConnectionMessageSender(int, String, String) is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 48
                },
                "end": {
                    "line": 27,
                    "character": 87
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/CommunityDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 170,
                    "character": 45
                },
                "end": {
                    "line": 170,
                    "character": 71
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method isRemoteReservingEnabled() from the type Community is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 67,
                    "character": 52
                },
                "end": {
                    "line": 67,
                    "character": 78
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove in near future"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/onesite/OneSiteConnectorBase.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 19
                },
                "end": {
                    "line": 64,
                    "character": 84
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Ugh, why must we catch Exception? Let's handle this better."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/InteractionSerializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 52,
                    "character": 15
                },
                "end": {
                    "line": 52,
                    "character": 56
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Eliminate this field on the client."
        },
        {
            "range": {
                "start": {
                    "line": 67,
                    "character": 15
                },
                "end": {
                    "line": 67,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Get `isBrowsing` removed in the perimeter (iPad) code. Its no longer used."
        },
        {
            "range": {
                "start": {
                    "line": 28,
                    "character": 15
                },
                "end": {
                    "line": 28,
                    "character": 107
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: This changes the contract. Can I remove it? Need to investigate the iPad dependencies."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/type/PhoneLanguage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 15,
                    "character": 6
                },
                "end": {
                    "line": 15,
                    "character": 60
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO These are currently unused. Are they even usable?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/model/GuestCardView.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 23,
                    "character": 12
                },
                "end": {
                    "line": 23,
                    "character": 30
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/model/application/YardiLeaseApplicationBuilder.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 65,
                    "character": 11
                },
                "end": {
                    "line": 65,
                    "character": 79
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - Waiting for more information.  Yardi will accept these nodes,"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/rpx/model/tempuri/RpxQuote.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 7
                },
                "end": {
                    "line": 41,
                    "character": 55
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this a separate DTO, move it to JAXB."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/voice/ExtensionOperator.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 16,
                    "character": 7
                },
                "end": {
                    "line": 16,
                    "character": 53
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO could potentially send voicemail to inbox"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/ApiControllerAdvice.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 50,
                    "character": 7
                },
                "end": {
                    "line": 50,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO It may be possible to remove this now that all tasks are in the backend-api module"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/community/FeatureRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 19,
                    "character": 6
                },
                "end": {
                    "line": 19,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Add a converter for Feature.Category so the enum can be used instead of the string."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/TwilioController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 32,
                    "character": 3
                },
                "end": {
                    "line": 32,
                    "character": 55
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move this to partner-api and redirect to there."
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 7
                },
                "end": {
                    "line": 41,
                    "character": 46
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: move this to the properties files"
        },
        {
            "range": {
                "start": {
                    "line": 183,
                    "character": 11
                },
                "end": {
                    "line": 183,
                    "character": 32
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO get this from DB"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi/YardiPropertyConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 7
                },
                "end": {
                    "line": 21,
                    "character": 111
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Once we're happy with this logic, consider moving it into a utility class if it seems appropriate."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/LossReasonService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 48,
                    "character": 7
                },
                "end": {
                    "line": 48,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 55,
                    "character": 7
                },
                "end": {
                    "line": 55,
                    "character": 129
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Handle SyncRecords in here instead of anywhere in the integration-specific code, so they're universal (as intended)."
        },
        {
            "range": {
                "start": {
                    "line": 138,
                    "character": 7
                },
                "end": {
                    "line": 138,
                    "character": 106
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Create a hidden flag (if this is a required business case) to account for this third meaning."
        },
        {
            "range": {
                "start": {
                    "line": 307,
                    "character": 11
                },
                "end": {
                    "line": 307,
                    "character": 115
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Maybe make this a List instead of a Set so we're even more accurately aware of duplication issues."
        },
        {
            "range": {
                "start": {
                    "line": 372,
                    "character": 11
                },
                "end": {
                    "line": 372,
                    "character": 71
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider adding the rejected count to the MergeResult."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/email/Attachment.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 36,
                    "character": 7
                },
                "end": {
                    "line": 36,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This is only used for testing. We should consider removing it."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/community/FloorPlanRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 7
                },
                "end": {
                    "line": 24,
                    "character": 53
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Replace this with a method on Community."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiProspectSearchConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 57,
                    "character": 47
                },
                "end": {
                    "line": 57,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method toString() from the type ByteArrayOutputStream is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/CommunityImage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 126,
                    "character": 17
                },
                "end": {
                    "line": 126,
                    "character": 43
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/util/src/main/java/com/powerpro/platform/util/CloudStorageUtils.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 18,
                    "character": 3
                },
                "end": {
                    "line": 18,
                    "character": 73
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Add specs around this before converting it to a service instance."
        },
        {
            "range": {
                "start": {
                    "line": 19,
                    "character": 3
                },
                "end": {
                    "line": 19,
                    "character": 90
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert the interface of this class to throw exceptions instead of using booleans."
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 3
                },
                "end": {
                    "line": 21,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert this to a `@Service` instance for easier usage and testing"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiFloorPlanConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 43,
                    "character": 47
                },
                "end": {
                    "line": 43,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method toString() from the type ByteArrayOutputStream is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4ProspectSearchConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 0
                },
                "end": {
                    "line": 11,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4ProspectSearchConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/BedBathDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 25,
                    "character": 43
                },
                "end": {
                    "line": 25,
                    "character": 103
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Remove this from the API since it was an unused field."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi/YardiProspectConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 174,
                    "character": 15
                },
                "end": {
                    "line": 174,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This is dumb. Shouldn't we just bail on the guest card if they don't send us a first interaction?"
        },
        {
            "range": {
                "start": {
                    "line": 110,
                    "character": 19
                },
                "end": {
                    "line": 110,
                    "character": 48
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: create interested units"
        },
        {
            "range": {
                "start": {
                    "line": 152,
                    "character": 23
                },
                "end": {
                    "line": 152,
                    "character": 99
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: if cancel, check if there are any future events that cancel the cancel"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/BedBathSerializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 15
                },
                "end": {
                    "line": 41,
                    "character": 75
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Remove this from the API since it was an unused field."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/slack/SlackResponse.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 7,
                    "character": 3
                },
                "end": {
                    "line": 7,
                    "character": 67
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Consider replacing this with a thirdparty Slack Java client"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/guestcard/InteractionStreamFilter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 7
                },
                "end": {
                    "line": 114,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Remove the check on isActive when we're no longer supporting older iPad versions."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target/generated-sources/groovy-stubs/main/com/powerpro/platform/model/guestcard/GuestCardQueries.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.lang is never used"
        },
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.io is never used"
        },
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 15
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.net is never used"
        },
        {
            "range": {
                "start": {
                    "line": 5,
                    "character": 7
                },
                "end": {
                    "line": 5,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.util is never used"
        },
        {
            "range": {
                "start": {
                    "line": 6,
                    "character": 7
                },
                "end": {
                    "line": 6,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import groovy.lang is never used"
        },
        {
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import groovy.util is never used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/InteractionDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 52,
                    "character": 7
                },
                "end": {
                    "line": 52,
                    "character": 65
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Rename this to taskId since its used by Yardi and RPX"
        },
        {
            "range": {
                "start": {
                    "line": 233,
                    "character": 7
                },
                "end": {
                    "line": 233,
                    "character": 77
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Add first interaction checks (completed, and of a certain type)."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/slack/SlackMessage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 3
                },
                "end": {
                    "line": 24,
                    "character": 67
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Consider replacing this with a thirdparty Slack Java client"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/community/CommunityImageMontageImageRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 71
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 8,
                    "character": 26
                },
                "end": {
                    "line": 8,
                    "character": 52
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/UnitVariableRentDeserializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 40,
                    "character": 10
                },
                "end": {
                    "line": 40,
                    "character": 63
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO no communityId being serialized, but probably ok"
        },
        {
            "range": {
                "start": {
                    "line": 60,
                    "character": 10
                },
                "end": {
                    "line": 60,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should refetch this from the db. This can be done once UnitDao is converted."
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 10
                },
                "end": {
                    "line": 64,
                    "character": 113
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Either communityId needs to be serialized or we need to remove it from the UnitVariableRent model."
        },
        {
            "range": {
                "start": {
                    "line": 71,
                    "character": 20
                },
                "end": {
                    "line": 71,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method setActive(boolean) from the type UnitVariableRent is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 28,
                    "character": 11
                },
                "end": {
                    "line": 28,
                    "character": 56
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO potentially this just goes into DateUtil"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcCommunityConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 14,
                    "character": 0
                },
                "end": {
                    "line": 14,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcCommunityConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/GuestCardController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 274,
                    "character": 15
                },
                "end": {
                    "line": 274,
                    "character": 135
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Handle validation/errors/unchanged conditions/etc. properly so the iPad knows it happened and handles it correctly."
        },
        {
            "range": {
                "start": {
                    "line": 290,
                    "character": 15
                },
                "end": {
                    "line": 290,
                    "character": 83
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We really need better error handling integration with the iPad!"
        },
        {
            "range": {
                "start": {
                    "line": 195,
                    "character": 15
                },
                "end": {
                    "line": 195,
                    "character": 133
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Split these up and handle them separately (e.g. by setting Conditions on the guest card or community as needed)."
        },
        {
            "range": {
                "start": {
                    "line": 233,
                    "character": 6
                },
                "end": {
                    "line": 233,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We must define the HTTP \"method\" since GET is the default and this probably only ever works with PUT/POST."
        },
        {
            "range": {
                "start": {
                    "line": 264,
                    "character": 31
                },
                "end": {
                    "line": 264,
                    "character": 93
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Determine if isV2 ever not true so we can just remove it."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/rpx/model/tempuri/ProspectSearchRequest.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 51,
                    "character": 15
                },
                "end": {
                    "line": 51,
                    "character": 114
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Why don't we just strip all non-digit characters here. I'm sure that's all they actually want."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/LossReasonController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 151,
                    "character": 15
                },
                "end": {
                    "line": 151,
                    "character": 88
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Once the JS is updated, this can return a true HTTP error response."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/WebServiceInspectorController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 7
                },
                "end": {
                    "line": 34,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 30
                },
                "end": {
                    "line": 64,
                    "character": 48
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 65,
                    "character": 8
                },
                "end": {
                    "line": 65,
                    "character": 11
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.AMC is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 66,
                    "character": 8
                },
                "end": {
                    "line": 66,
                    "character": 25
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.REALPAGE_EXCHANGE is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 67,
                    "character": 8
                },
                "end": {
                    "line": 67,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 68,
                    "character": 8
                },
                "end": {
                    "line": 68,
                    "character": 19
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI_V4 is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 79,
                    "character": 12
                },
                "end": {
                    "line": 79,
                    "character": 30
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 156,
                    "character": 20
                },
                "end": {
                    "line": 156,
                    "character": 38
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 160,
                    "character": 28
                },
                "end": {
                    "line": 160,
                    "character": 46
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant I_LOVE_LEASING needs a corresponding case label in this enum switch on BackendIntegration"
        },
        {
            "range": {
                "start": {
                    "line": 160,
                    "character": 28
                },
                "end": {
                    "line": 160,
                    "character": 46
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant L2L needs a corresponding case label in this enum switch on BackendIntegration"
        },
        {
            "range": {
                "start": {
                    "line": 160,
                    "character": 28
                },
                "end": {
                    "line": 160,
                    "character": 46
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant MANUAL needs a corresponding case label in this enum switch on BackendIntegration"
        },
        {
            "range": {
                "start": {
                    "line": 160,
                    "character": 28
                },
                "end": {
                    "line": 160,
                    "character": 46
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant ONESITE needs a corresponding case label in this enum switch on BackendIntegration"
        },
        {
            "range": {
                "start": {
                    "line": 160,
                    "character": 28
                },
                "end": {
                    "line": 160,
                    "character": 46
                }
            },
            "severity": 2,
            "code": "33555193",
            "source": "Java",
            "message": "The enum constant POP needs a corresponding case label in this enum switch on BackendIntegration"
        },
        {
            "range": {
                "start": {
                    "line": 161,
                    "character": 29
                },
                "end": {
                    "line": 161,
                    "character": 32
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.AMC is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 164,
                    "character": 29
                },
                "end": {
                    "line": 164,
                    "character": 46
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.REALPAGE_EXCHANGE is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 167,
                    "character": 29
                },
                "end": {
                    "line": 167,
                    "character": 37
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 170,
                    "character": 29
                },
                "end": {
                    "line": 170,
                    "character": 40
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI_V4 is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/UnitController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 235,
                    "character": 15
                },
                "end": {
                    "line": 235,
                    "character": 38
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: add error message"
        },
        {
            "range": {
                "start": {
                    "line": 241,
                    "character": 15
                },
                "end": {
                    "line": 241,
                    "character": 79
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: add error message, user cannot edit this community's units"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/type/TimeZoneType.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 6
                },
                "end": {
                    "line": 10,
                    "character": 78
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Clean this up by creating a time_zone table and using numeric ID's."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/guestcard/QuoteService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 157,
                    "character": 11
                },
                "end": {
                    "line": 157,
                    "character": 114
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This was the original logic for this feature, but shouldn't it require both operations to succeed?"
        },
        {
            "range": {
                "start": {
                    "line": 198,
                    "character": 15
                },
                "end": {
                    "line": 198,
                    "character": 70
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Change the smsMessage to email subject + quote URL"
        },
        {
            "range": {
                "start": {
                    "line": 331,
                    "character": 15
                },
                "end": {
                    "line": 331,
                    "character": 109
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should do a DTO update/merge instead of using the Quote model in the integration code."
        },
        {
            "range": {
                "start": {
                    "line": 361,
                    "character": 7
                },
                "end": {
                    "line": 361,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should we consider validating rent if remote quoting isn't enabled, but variable rent is?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/tags/BaseTag.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 70
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import com.powerpro.platform.persistence.community.CommunityRepository is never used"
        },
        {
            "range": {
                "start": {
                    "line": 20,
                    "character": 3
                },
                "end": {
                    "line": 20,
                    "character": 39
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: lazy load and cache internally"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/UnitSerializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 54,
                    "character": 15
                },
                "end": {
                    "line": 54,
                    "character": 54
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Eliminate this field on the iPad."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/FloorPlan.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 228,
                    "character": 7
                },
                "end": {
                    "line": 228,
                    "character": 73
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Fix the null values in the dababase? Should they be nullable?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/type/BackendIntegration.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 3
                },
                "end": {
                    "line": 12,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Use IntegrationType instead."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/DeviceSyncService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 19
                },
                "end": {
                    "line": 41,
                    "character": 144
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Consider using clienUpdatedDate instead here if it is some threshold of time older (5 minutes?) than the deviceSyncDate."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/PropertyManager.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 94,
                    "character": 12
                },
                "end": {
                    "line": 94,
                    "character": 30
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 164,
                    "character": 43
                },
                "end": {
                    "line": 164,
                    "character": 61
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 164,
                    "character": 62
                },
                "end": {
                    "line": 164,
                    "character": 70
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 171,
                    "character": 43
                },
                "end": {
                    "line": 171,
                    "character": 61
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 171,
                    "character": 62
                },
                "end": {
                    "line": 171,
                    "character": 73
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI_V4 is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 178,
                    "character": 42
                },
                "end": {
                    "line": 178,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 178,
                    "character": 61
                },
                "end": {
                    "line": 178,
                    "character": 78
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.REALPAGE_EXCHANGE is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 185,
                    "character": 42
                },
                "end": {
                    "line": 185,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 185,
                    "character": 61
                },
                "end": {
                    "line": 185,
                    "character": 64
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.AMC is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 192,
                    "character": 42
                },
                "end": {
                    "line": 192,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 192,
                    "character": 61
                },
                "end": {
                    "line": 192,
                    "character": 67
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.MANUAL is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/LeadCallRecord.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 71,
                    "character": 7
                },
                "end": {
                    "line": 71,
                    "character": 106
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this an integer, as every data point we have is an integer but it's stored as a VARCHAR."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiProspectConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 3
                },
                "end": {
                    "line": 24,
                    "character": 140
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Add some WSDL verification to our outgoing XML so we can catch issues earlier in the process and model defensively to prevent them."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/util/src/main/java/com/powerpro/platform/util/DateUtil.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 45,
                    "character": 3
                },
                "end": {
                    "line": 45,
                    "character": 95
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Conslidate parsers under some flexible new methods which will support multiple formats."
        },
        {
            "range": {
                "start": {
                    "line": 72,
                    "character": 7
                },
                "end": {
                    "line": 72,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should be able to replace this with the built-in DateTimeFormatter.ISO_LOCAL_DATE_TIME"
        },
        {
            "range": {
                "start": {
                    "line": 239,
                    "character": 11
                },
                "end": {
                    "line": 239,
                    "character": 96
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This doesn't match the defined iOS long date format. Does it ever shortcut here?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/config/SecurityConfig.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 11
                },
                "end": {
                    "line": 64,
                    "character": 69
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO These were taken from the old application.properties."
        },
        {
            "range": {
                "start": {
                    "line": 92,
                    "character": 19
                },
                "end": {
                    "line": 92,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO public infographic endpoints don't belong in admin"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4UnitAvailabilityConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 8,
                    "character": 0
                },
                "end": {
                    "line": 8,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4UnitAvailabilityConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeRpxUnitConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 92,
                    "character": 19
                },
                "end": {
                    "line": 92,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We need a way to surface this information in admin w/o it being too noisy."
        },
        {
            "range": {
                "start": {
                    "line": 157,
                    "character": 7
                },
                "end": {
                    "line": 157,
                    "character": 68
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Remove as we refactor the domain out of this connector."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/CommunityMarketingSourceController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 126,
                    "character": 15
                },
                "end": {
                    "line": 126,
                    "character": 63
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO what is the file name from iOS? can this be"
        },
        {
            "range": {
                "start": {
                    "line": 250,
                    "character": 6
                },
                "end": {
                    "line": 250,
                    "character": 87
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove communityId from this URL. We can infer it from the marketing source."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target-ide/generated-sources/java/com/powerpro/platform/model/community/QCommunityImage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 30,
                    "character": 26
                },
                "end": {
                    "line": 30,
                    "character": 52
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 30,
                    "character": 119
                },
                "end": {
                    "line": 30,
                    "character": 145
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 30,
                    "character": 217
                },
                "end": {
                    "line": 30,
                    "character": 243
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcLeasingAgentConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 0
                },
                "end": {
                    "line": 10,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcLeasingAgentConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/BackendIntegrationConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 20,
                    "character": 15
                },
                "end": {
                    "line": 20,
                    "character": 33
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 71
                },
                "end": {
                    "line": 11,
                    "character": 89
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 14,
                    "character": 48
                },
                "end": {
                    "line": 14,
                    "character": 66
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 19,
                    "character": 11
                },
                "end": {
                    "line": 19,
                    "character": 29
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeFollowUpConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 34,
                    "character": 11
                },
                "end": {
                    "line": 34,
                    "character": 75
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Where the hell do these come from? Convert them to an enum."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeActivityConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 75,
                    "character": 11
                },
                "end": {
                    "line": 75,
                    "character": 72
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Send dates as Eastern since that's what RPX always uses."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/CanonicalUserService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 13,
                    "character": 0
                },
                "end": {
                    "line": 13,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field CanonicalUserService.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/CommunityImageMontageImage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 22,
                    "character": 14
                },
                "end": {
                    "line": 22,
                    "character": 94
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Map CommunityImageMontage directly to CommunityImage and remove this class."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/CommunityImageMontage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 77,
                    "character": 17
                },
                "end": {
                    "line": 77,
                    "character": 43
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 38,
                    "character": 2
                },
                "end": {
                    "line": 38,
                    "character": 132
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Fix this model. ID is included because these records are duplicated over and over for the same set of images. See issue #1302"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiClient.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 80,
                    "character": 7
                },
                "end": {
                    "line": 80,
                    "character": 23
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Add tests."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/CommunityService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 16,
                    "character": 7
                },
                "end": {
                    "line": 16,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 146,
                    "character": 12
                },
                "end": {
                    "line": 146,
                    "character": 30
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 146,
                    "character": 31
                },
                "end": {
                    "line": 146,
                    "character": 49
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getSyncableTypes() from the type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/guestcard/InteractionRepositoryImpl.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 170,
                    "character": 7
                },
                "end": {
                    "line": 170,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Quotes should become interactions at which point this can be removed."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/system/ConditionRecordService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 147,
                    "character": 11
                },
                "end": {
                    "line": 147,
                    "character": 115
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Add a \"is not automatically removable or clearable\" flag to ConditionType and only clear conditions"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4ConnectorBase.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 66,
                    "character": 19
                },
                "end": {
                    "line": 66,
                    "character": 84
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Ugh, why must we catch Exception? Let's handle this better."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/rpx/model/tempuri/AmenitySearchResult.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 9,
                    "character": 3
                },
                "end": {
                    "line": 9,
                    "character": 89
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: So far the sample XML only has these two useless fields. Look for more examples."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/TwilioService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 213,
                    "character": 15
                },
                "end": {
                    "line": 213,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: What do we do with \"completedBy\" when an activity is performed not by the agent,"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/lro/LroService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 7
                },
                "end": {
                    "line": 24,
                    "character": 84
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Convert all variable rent clients/connectors to use this same interface."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 102,
                    "character": 7
                },
                "end": {
                    "line": 102,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 107,
                    "character": 7
                },
                "end": {
                    "line": 107,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 112,
                    "character": 7
                },
                "end": {
                    "line": 112,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 141,
                    "character": 7
                },
                "end": {
                    "line": 141,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Figure out where this goes in the interface, and why we use it in such a one-off manner."
        },
        {
            "range": {
                "start": {
                    "line": 506,
                    "character": 11
                },
                "end": {
                    "line": 506,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Move this upstream so every time we send, we also ingest, no matter the integration?"
        },
        {
            "range": {
                "start": {
                    "line": 746,
                    "character": 7
                },
                "end": {
                    "line": 746,
                    "character": 73
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This interface should take a date object not a date string so"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/CommunityMarketingSourceDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 43,
                    "character": 11
                },
                "end": {
                    "line": 43,
                    "character": 84
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Are we sure we need this? It's never been in the API before has it?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/partner-api/src/main/java/com/powerpro/partnerapi/web/config/SecurityConfig.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 17,
                    "character": 3
                },
                "end": {
                    "line": 17,
                    "character": 78
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Can we remove this config and rely solely on cloud endpoints security?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/rpx/RealPageExchangeRentMatrixConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 3
                },
                "end": {
                    "line": 27,
                    "character": 134
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Move this logical complexity upstream to the service layer. I don't think this connector should be responsible for situations"
        },
        {
            "range": {
                "start": {
                    "line": 142,
                    "character": 7
                },
                "end": {
                    "line": 142,
                    "character": 107
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO The method interface should be updated to accept LocalDate for 'needByDate' when there is time."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/LeaseTermService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 74,
                    "character": 62
                },
                "end": {
                    "line": 74,
                    "character": 71
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getName() from the type LeaseTerm is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcProspectSearchExtractor.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 48,
                    "character": 7
                },
                "end": {
                    "line": 48,
                    "character": 112
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Convert dates inside here so the external API doesn't have to be concerned with AMC date specifics."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/SystemReportController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 0
                },
                "end": {
                    "line": 24,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field SystemReportController.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/GuestCardSerializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 61,
                    "character": 70
                },
                "end": {
                    "line": 61,
                    "character": 116
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Remove this field in perimeter and here."
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 14
                },
                "end": {
                    "line": 64,
                    "character": 125
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO prospetedId has been removed from the system, but maintaining it here since the iPad has references to it."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/ProspectiveTenantDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 23,
                    "character": 7
                },
                "end": {
                    "line": 23,
                    "character": 39
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Turn these into primitives"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi4/Yardi4DtoConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 164,
                    "character": 7
                },
                "end": {
                    "line": 164,
                    "character": 63
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO interaction results (currently not consuming these)"
        },
        {
            "range": {
                "start": {
                    "line": 227,
                    "character": 7
                },
                "end": {
                    "line": 227,
                    "character": 124
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Separate the logic that's altering the state of the guest card from the logic that's creating Interaction DTOs."
        },
        {
            "range": {
                "start": {
                    "line": 238,
                    "character": 19
                },
                "end": {
                    "line": 238,
                    "character": 122
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO These guest status fields need to be removed when we switch to the modern guest card status system"
        },
        {
            "range": {
                "start": {
                    "line": 241,
                    "character": 23
                },
                "end": {
                    "line": 241,
                    "character": 99
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: if cancel, check if there are any future events that cancel the cancel"
        },
        {
            "range": {
                "start": {
                    "line": 314,
                    "character": 7
                },
                "end": {
                    "line": 314,
                    "character": 118
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: For those communities that are multi-phase, ensure we only set leasing consultants that are common across"
        },
        {
            "range": {
                "start": {
                    "line": 406,
                    "character": 19
                },
                "end": {
                    "line": 406,
                    "character": 71
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: this isn't great. the last two phones will win"
        },
        {
            "range": {
                "start": {
                    "line": 441,
                    "character": 15
                },
                "end": {
                    "line": 441,
                    "character": 88
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Delete scheduled appointments if we get a \"CancelAppointment\" type."
        },
        {
            "range": {
                "start": {
                    "line": 450,
                    "character": 11
                },
                "end": {
                    "line": 450,
                    "character": 132
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Convert this to a DTO and re-hide the ID setter on Interaction. It's only needed for this domain object update B.S."
        },
        {
            "range": {
                "start": {
                    "line": 476,
                    "character": 19
                },
                "end": {
                    "line": 476,
                    "character": 77
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Rename this to taskId since its used by Yardi and RPX"
        },
        {
            "range": {
                "start": {
                    "line": 480,
                    "character": 15
                },
                "end": {
                    "line": 480,
                    "character": 129
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: In the future, we should de-dupe incoming Events based on notes (and potentially other field value matches)."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4VersionNumberConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 0
                },
                "end": {
                    "line": 11,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4VersionNumberConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiActivityResultConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 40,
                    "character": 47
                },
                "end": {
                    "line": 40,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method toString() from the type ByteArrayOutputStream is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 20,
                    "character": 3
                },
                "end": {
                    "line": 20,
                    "character": 135
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Clean up the exception handling so it's consistent across the client(s) and allows upstream code to decide how to handle them."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/json/FeatureSerializer.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 40,
                    "character": 45
                },
                "end": {
                    "line": 40,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        },
        {
            "range": {
                "start": {
                    "line": 42,
                    "character": 41
                },
                "end": {
                    "line": 42,
                    "character": 78
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi4/Yardi4PropertyConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 7
                },
                "end": {
                    "line": 21,
                    "character": 111
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Once we're happy with this logic, consider moving it into a utility class if it seems appropriate."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4PropertyConfigurationConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 8,
                    "character": 0
                },
                "end": {
                    "line": 8,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4PropertyConfigurationConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/LeadAccessTokenEmailFormatConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 9,
                    "character": 79
                },
                "end": {
                    "line": 9,
                    "character": 94
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 9,
                    "character": 95
                },
                "end": {
                    "line": 9,
                    "character": 106
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken.EmailFormat is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 48
                },
                "end": {
                    "line": 12,
                    "character": 63
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 64
                },
                "end": {
                    "line": 12,
                    "character": 75
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken.EmailFormat is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 17,
                    "character": 11
                },
                "end": {
                    "line": 17,
                    "character": 26
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 17,
                    "character": 27
                },
                "end": {
                    "line": 17,
                    "character": 38
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken.EmailFormat is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 18,
                    "character": 15
                },
                "end": {
                    "line": 18,
                    "character": 30
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 18,
                    "character": 15
                },
                "end": {
                    "line": 18,
                    "character": 30
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken.EmailFormat is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/LeaseApplicationController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 50,
                    "character": 11
                },
                "end": {
                    "line": 50,
                    "character": 72
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - This should be modified to return a 501 or be removed."
        },
        {
            "range": {
                "start": {
                    "line": 84,
                    "character": 11
                },
                "end": {
                    "line": 84,
                    "character": 76
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - We should remove this or return a 501 asap because it is a"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcUnitTypeConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 0
                },
                "end": {
                    "line": 10,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcUnitTypeConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/Unit.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 7
                },
                "end": {
                    "line": 10,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 346,
                    "character": 79
                },
                "end": {
                    "line": 346,
                    "character": 97
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 346,
                    "character": 98
                },
                "end": {
                    "line": 346,
                    "character": 104
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.MANUAL is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 361,
                    "character": 6
                },
                "end": {
                    "line": 361,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Used only by manage-units.jsp. This should be in a view model for unit."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/VariableRentService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 167,
                    "character": 18
                },
                "end": {
                    "line": 167,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method setVariableRentSyncStarted(Timestamp) from the type Community is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 168,
                    "character": 18
                },
                "end": {
                    "line": 168,
                    "character": 52
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method setVariableRentSyncCompleted(Timestamp) from the type Community is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 188,
                    "character": 22
                },
                "end": {
                    "line": 188,
                    "character": 61
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method setVariableRentSyncStarted(Timestamp) from the type Community is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 189,
                    "character": 22
                },
                "end": {
                    "line": 189,
                    "character": 66
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method setVariableRentSyncCompleted(Timestamp) from the type Community is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 187,
                    "character": 15
                },
                "end": {
                    "line": 187,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We can replace the variable rent sync started/completed with the sync summary in the near future."
        },
        {
            "range": {
                "start": {
                    "line": 219,
                    "character": 7
                },
                "end": {
                    "line": 219,
                    "character": 115
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Migrate all solutions to this to the same interface so this can be a simple factory service method call"
        },
        {
            "range": {
                "start": {
                    "line": 246,
                    "character": 65
                },
                "end": {
                    "line": 246,
                    "character": 113
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Is this VariableRentType.YIELDSTAR_ONESITE?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/InfographicController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 71
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 123,
                    "character": 13
                },
                "end": {
                    "line": 123,
                    "character": 39
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 125,
                    "character": 48
                },
                "end": {
                    "line": 125,
                    "character": 74
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 125,
                    "character": 48
                },
                "end": {
                    "line": 125,
                    "character": 90
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor CommunityImageMontageImage(CommunityImageMontage, CommunityImage) is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 146,
                    "character": 15
                },
                "end": {
                    "line": 146,
                    "character": 70
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO use NewAptQuote@apartment-quotes.com as from email"
        },
        {
            "range": {
                "start": {
                    "line": 149,
                    "character": 63
                },
                "end": {
                    "line": 149,
                    "character": 109
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO may need to replace community placeholder"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/VariableRentType.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 19,
                    "character": 7
                },
                "end": {
                    "line": 19,
                    "character": 120
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Rename or find a better solution? Its used to know what communities to sync when pricing is fetched via RPX."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeRentMatrixConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 101,
                    "character": 11
                },
                "end": {
                    "line": 101,
                    "character": 65
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Add error handling around the integer conversion"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target/generated-sources/groovy-stubs/main/com/powerpro/platform/model/guestcard/ProspectiveTenantQueries.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.io is never used"
        },
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 15
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.net is never used"
        },
        {
            "range": {
                "start": {
                    "line": 5,
                    "character": 7
                },
                "end": {
                    "line": 5,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.util is never used"
        },
        {
            "range": {
                "start": {
                    "line": 6,
                    "character": 7
                },
                "end": {
                    "line": 6,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import groovy.lang is never used"
        },
        {
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import groovy.util is never used"
        },
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.lang is never used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/guestcard/GuestCardSearchService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 104,
                    "character": 7
                },
                "end": {
                    "line": 104,
                    "character": 131
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Change this to use query Criteria which will allow us to construct the query piece by piece instead of having entirely"
        },
        {
            "range": {
                "start": {
                    "line": 287,
                    "character": 7
                },
                "end": {
                    "line": 287,
                    "character": 76
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Add options to search with phone number and first name as well."
        },
        {
            "range": {
                "start": {
                    "line": 48,
                    "character": 3
                },
                "end": {
                    "line": 48,
                    "character": 116
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Move all repository find methods into this class as wrapped passthrough methods (perhaps with saner names)."
        },
        {
            "range": {
                "start": {
                    "line": 57,
                    "character": 7
                },
                "end": {
                    "line": 57,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 62,
                    "character": 7
                },
                "end": {
                    "line": 62,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiProspectSearchExtractor.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 23,
                    "character": 0
                },
                "end": {
                    "line": 23,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field YardiProspectSearchExtractor.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/MarketingSourceController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 95,
                    "character": 10
                },
                "end": {
                    "line": 95,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be replaced by using the TwilioSDK. See TwiMLResponse."
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 6
                },
                "end": {
                    "line": 114,
                    "character": 133
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove communityId from this URL. We can infer it from the marketing source. But this will require updating Twilio Numbers"
        },
        {
            "range": {
                "start": {
                    "line": 136,
                    "character": 10
                },
                "end": {
                    "line": 136,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be replaced by using the TwilioSDK. See TwiMLResponse."
        },
        {
            "range": {
                "start": {
                    "line": 32,
                    "character": 3
                },
                "end": {
                    "line": 32,
                    "character": 99
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move Twilio endpoints to partner-api module and clean them up with specs and DTO responses."
        },
        {
            "range": {
                "start": {
                    "line": 70,
                    "character": 14
                },
                "end": {
                    "line": 70,
                    "character": 124
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO I'm guessing this is broken since all other controllers multiply updated by 1000 to get the correct value"
        },
        {
            "range": {
                "start": {
                    "line": 79,
                    "character": 6
                },
                "end": {
                    "line": 79,
                    "character": 134
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Remove communityId from this URL. We can infer it from the marketing source. But this will require updating Twilio numbers."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/community/LeadAccessTokenRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 9,
                    "character": 65
                },
                "end": {
                    "line": 9,
                    "character": 80
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 9
                },
                "end": {
                    "line": 11,
                    "character": 24
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 13,
                    "character": 4
                },
                "end": {
                    "line": 13,
                    "character": 19
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 15,
                    "character": 4
                },
                "end": {
                    "line": 15,
                    "character": 19
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/system/SyncService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 116,
                    "character": 16
                },
                "end": {
                    "line": 116,
                    "character": 34
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 132,
                    "character": 12
                },
                "end": {
                    "line": 132,
                    "character": 30
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 583,
                    "character": 126
                },
                "end": {
                    "line": 583,
                    "character": 136
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getLabel() from the type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 94,
                    "character": 7
                },
                "end": {
                    "line": 94,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 98,
                    "character": 7
                },
                "end": {
                    "line": 98,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO fix circular dependencies"
        },
        {
            "range": {
                "start": {
                    "line": 168,
                    "character": 7
                },
                "end": {
                    "line": 168,
                    "character": 139
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Separate the retrieval from the merge. Rename the retrieval method, and move merge into the appropriate domain entity service."
        },
        {
            "range": {
                "start": {
                    "line": 180,
                    "character": 11
                },
                "end": {
                    "line": 180,
                    "character": 132
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: See if this is really usually an error that isn't caught anywhere else, then figure out the right way to handle it."
        },
        {
            "range": {
                "start": {
                    "line": 252,
                    "character": 11
                },
                "end": {
                    "line": 252,
                    "character": 92
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Get rid of these community fields and use the sync summary or sync records."
        },
        {
            "range": {
                "start": {
                    "line": 335,
                    "character": 11
                },
                "end": {
                    "line": 335,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - move isManualIntegration() down into the Community in the future"
        },
        {
            "range": {
                "start": {
                    "line": 502,
                    "character": 11
                },
                "end": {
                    "line": 502,
                    "character": 130
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Wrap all of the subsequent sends to L2L, etc. also in isSyncable. I'm assuming if the GC is not syncable we don't"
        },
        {
            "range": {
                "start": {
                    "line": 544,
                    "character": 7
                },
                "end": {
                    "line": 544,
                    "character": 114
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Pull the data retrieval portion of the sync back up here, keep the merge portion in GuestCardService."
        },
        {
            "range": {
                "start": {
                    "line": 580,
                    "character": 11
                },
                "end": {
                    "line": 580,
                    "character": 132
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Stop doing this hacky bullshit. Code to the interface, and let the implementation throw this if necessary. Sheebus."
        },
        {
            "range": {
                "start": {
                    "line": 581,
                    "character": 11
                },
                "end": {
                    "line": 581,
                    "character": 138
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Figure out why the hell we don't pull in guest cards from AMC, YardiAPI, or OneSite when all support some form of search."
        },
        {
            "range": {
                "start": {
                    "line": 636,
                    "character": 15
                },
                "end": {
                    "line": 636,
                    "character": 97
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Use this zone as the best common denominator across all integrations for now."
        },
        {
            "range": {
                "start": {
                    "line": 680,
                    "character": 11
                },
                "end": {
                    "line": 680,
                    "character": 74
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Make this work without checking for a specific integration"
        },
        {
            "range": {
                "start": {
                    "line": 747,
                    "character": 7
                },
                "end": {
                    "line": 747,
                    "character": 66
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider adding quotes to the community sync summary."
        },
        {
            "range": {
                "start": {
                    "line": 762,
                    "character": 11
                },
                "end": {
                    "line": 762,
                    "character": 113
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Pull the integration service portion back here and leave the data merging in the entity service."
        },
        {
            "range": {
                "start": {
                    "line": 822,
                    "character": 23
                },
                "end": {
                    "line": 822,
                    "character": 77
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Why don't we sync in any values during an update?"
        },
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 7
                },
                "end": {
                    "line": 24,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/FeatureDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 23,
                    "character": 32
                },
                "end": {
                    "line": 23,
                    "character": 69
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        },
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 29
                },
                "end": {
                    "line": 24,
                    "character": 66
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO remove unused field from the API"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/InteractionResultController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 98,
                    "character": 15
                },
                "end": {
                    "line": 98,
                    "character": 88
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Once the JS is updated, this can return a true HTTP error response."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/Amenity.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 39,
                    "character": 23
                },
                "end": {
                    "line": 39,
                    "character": 40
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type AmenitySerializer is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 57
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type AmenitySerializer is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/BedBathService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 186,
                    "character": 7
                },
                "end": {
                    "line": 186,
                    "character": 73
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Switch to using community.add behavior and save via cascade."
        },
        {
            "range": {
                "start": {
                    "line": 55,
                    "character": 14
                },
                "end": {
                    "line": 55,
                    "character": 121
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We should consider just creating the bed/bath instead of using bedroom matches which just seems wrong."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/lro/LroVariableRentConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 43,
                    "character": 18
                },
                "end": {
                    "line": 43,
                    "character": 76
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Do a unit repository lookup instead of using the map?"
        },
        {
            "range": {
                "start": {
                    "line": 71,
                    "character": 19
                },
                "end": {
                    "line": 71,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We need a way to surface this information in admin w/o it being too noisy."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/CommunityController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 443,
                    "character": 10
                },
                "end": {
                    "line": 443,
                    "character": 106
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Transient fields are lost after the save because the community reference is replaced below."
        },
        {
            "range": {
                "start": {
                    "line": 494,
                    "character": 15
                },
                "end": {
                    "line": 494,
                    "character": 63
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO what is the file name from iOS? can this be"
        },
        {
            "range": {
                "start": {
                    "line": 499,
                    "character": 15
                },
                "end": {
                    "line": 499,
                    "character": 93
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO can we get the content length of the file without reading it into memory?"
        },
        {
            "range": {
                "start": {
                    "line": 200,
                    "character": 11
                },
                "end": {
                    "line": 200,
                    "character": 78
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We need a way to look up the conditions for a given community."
        },
        {
            "range": {
                "start": {
                    "line": 422,
                    "character": 11
                },
                "end": {
                    "line": 422,
                    "character": 108
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Use a view model for editing the community in the form and copy that entity to the existing."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiVersionNumberExtractor.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 16,
                    "character": 0
                },
                "end": {
                    "line": 16,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field YardiVersionNumberExtractor.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target-ide/generated-sources/java/com/powerpro/platform/model/community/QCommunityImageMontage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 119
                },
                "end": {
                    "line": 26,
                    "character": 145
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 217
                },
                "end": {
                    "line": 26,
                    "character": 243
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 26
                },
                "end": {
                    "line": 26,
                    "character": 52
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/rpx/RealPageExchangeBaseConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 57,
                    "character": 19
                },
                "end": {
                    "line": 57,
                    "character": 84
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Ugh, why must we catch Exception? Let's handle this better."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/PropertyManagerController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 6,
                    "character": 7
                },
                "end": {
                    "line": 6,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 78,
                    "character": 62
                },
                "end": {
                    "line": 78,
                    "character": 80
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 78,
                    "character": 81
                },
                "end": {
                    "line": 78,
                    "character": 89
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 90,
                    "character": 69
                },
                "end": {
                    "line": 90,
                    "character": 87
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 90,
                    "character": 88
                },
                "end": {
                    "line": 90,
                    "character": 99
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI_V4 is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 117,
                    "character": 66
                },
                "end": {
                    "line": 117,
                    "character": 84
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 117,
                    "character": 85
                },
                "end": {
                    "line": 117,
                    "character": 91
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.MANUAL is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 125,
                    "character": 68
                },
                "end": {
                    "line": 125,
                    "character": 86
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/VariableRentFileService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 87,
                    "character": 7
                },
                "end": {
                    "line": 87,
                    "character": 84
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Replace boolean return with exception throwing for proper error handling"
        },
        {
            "range": {
                "start": {
                    "line": 134,
                    "character": 7
                },
                "end": {
                    "line": 134,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO The responsibility of setting an ID should be put on the creators of UnitVariableRent."
        },
        {
            "range": {
                "start": {
                    "line": 31,
                    "character": 3
                },
                "end": {
                    "line": 31,
                    "character": 54
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Consider merging this with VariableRentService"
        },
        {
            "range": {
                "start": {
                    "line": 32,
                    "character": 3
                },
                "end": {
                    "line": 32,
                    "character": 80
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Fix error handling. Stop returning null and boolean for error scenarios."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/community/UnitRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 100,
                    "character": 7
                },
                "end": {
                    "line": 100,
                    "character": 47
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Replace with a method on Community"
        },
        {
            "range": {
                "start": {
                    "line": 124,
                    "character": 7
                },
                "end": {
                    "line": 124,
                    "character": 47
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Replace with a method on Community"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/UserService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 117,
                    "character": 19
                },
                "end": {
                    "line": 117,
                    "character": 87
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Once we understand the consequences also set is_active to false"
        },
        {
            "range": {
                "start": {
                    "line": 28,
                    "character": 0
                },
                "end": {
                    "line": 28,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field UserService.log is not used"
        },
        {
            "range": {
                "start": {
                    "line": 114,
                    "character": 15
                },
                "end": {
                    "line": 114,
                    "character": 65
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Should we also deactivate agents with no TPK?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/dto/LossReasonDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 7
                },
                "end": {
                    "line": 11,
                    "character": 64
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this not be a primitive so it can be nullable."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/guestcard/QuoteEmailCategory.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 56,
                    "character": 7
                },
                "end": {
                    "line": 56,
                    "character": 89
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Add cascade to save these and be able to remove the category item repository."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4LeaseApplicationConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 8,
                    "character": 0
                },
                "end": {
                    "line": 8,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4LeaseApplicationConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/community/InfographicTemplateService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 287,
                    "character": 15
                },
                "end": {
                    "line": 287,
                    "character": 53
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO configure phone number text color"
        },
        {
            "range": {
                "start": {
                    "line": 312,
                    "character": 11
                },
                "end": {
                    "line": 312,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO configure button text"
        },
        {
            "range": {
                "start": {
                    "line": 568,
                    "character": 15
                },
                "end": {
                    "line": 568,
                    "character": 53
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO configure phone number text color"
        },
        {
            "range": {
                "start": {
                    "line": 593,
                    "character": 11
                },
                "end": {
                    "line": 593,
                    "character": 37
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO configure button text"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/dto/QuoteDto.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 55,
                    "character": 7
                },
                "end": {
                    "line": 55,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO We might be able use @DateTimeFormat on the @RequestParam date fields"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/EmailController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 6
                },
                "end": {
                    "line": 26,
                    "character": 69
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Fix this response. It renders an invalid JSON string \"OK\"."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/popcard/PopCardConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 79,
                    "character": 11
                },
                "end": {
                    "line": 79,
                    "character": 69
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO is the vendor ID specific for a particular community?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/ReportRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 81,
                    "character": 7
                },
                "end": {
                    "line": 81,
                    "character": 39
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move to GuestCardRepository"
        },
        {
            "range": {
                "start": {
                    "line": 54,
                    "character": 7
                },
                "end": {
                    "line": 54,
                    "character": 39
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move to CommunityRepository"
        },
        {
            "range": {
                "start": {
                    "line": 69,
                    "character": 7
                },
                "end": {
                    "line": 69,
                    "character": 47
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move to ProspectiveTenantRepository"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi/YardiConnectorBase.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 78
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 48
                },
                "end": {
                    "line": 64,
                    "character": 87
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type UrlFetchHttpsUrlConnectionMessageSender is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 64,
                    "character": 48
                },
                "end": {
                    "line": 64,
                    "character": 89
                }
            },
            "severity": 2,
            "code": "134217861",
            "source": "Java",
            "message": "The constructor UrlFetchHttpsUrlConnectionMessageSender() is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 48,
                    "character": 11
                },
                "end": {
                    "line": 48,
                    "character": 56
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO potentially this just goes into DateUtil"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/yardi4/Yardi4Service.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 349,
                    "character": 15
                },
                "end": {
                    "line": 349,
                    "character": 49
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: what do we do if this fails?"
        },
        {
            "range": {
                "start": {
                    "line": 533,
                    "character": 11
                },
                "end": {
                    "line": 533,
                    "character": 56
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider making this a DateUtil method."
        },
        {
            "range": {
                "start": {
                    "line": 566,
                    "character": 7
                },
                "end": {
                    "line": 566,
                    "character": 90
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO If we have to add additional formats consider creating a single formatter with"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/formatter/LeadAccessTokenFormatter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 60
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 13,
                    "character": 59
                },
                "end": {
                    "line": 13,
                    "character": 74
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 19,
                    "character": 30
                },
                "end": {
                    "line": 19,
                    "character": 45
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 20,
                    "character": 45
                },
                "end": {
                    "line": 20,
                    "character": 52
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method getId() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 24,
                    "character": 11
                },
                "end": {
                    "line": 24,
                    "character": 26
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/GuestCardController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 125,
                    "character": 11
                },
                "end": {
                    "line": 125,
                    "character": 103
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move this query to GuestCardService so we can remove the GuestCardRepository dependency"
        },
        {
            "range": {
                "start": {
                    "line": 299,
                    "character": 11
                },
                "end": {
                    "line": 299,
                    "character": 103
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Move this query to GuestCardService so we can remove the GuestCardRepository dependency"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target-ide/generated-sources/java/com/powerpro/platform/model/community/QPropertyManager.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 69
                },
                "end": {
                    "line": 21,
                    "character": 87
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 186
                },
                "end": {
                    "line": 21,
                    "character": 204
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4AgentsSourcesResultsConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 8,
                    "character": 0
                },
                "end": {
                    "line": 8,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4AgentsSourcesResultsConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/QuoteController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 82,
                    "character": 19
                },
                "end": {
                    "line": 82,
                    "character": 124
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Customize these messages and handling. Also, move this into an integration service wrapper service."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/community/PropertyManagerRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 11,
                    "character": 51
                },
                "end": {
                    "line": 11,
                    "character": 69
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/api/src/main/java/com/powerpro/platform/web/controller/api/ProspectiveTenantController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 129,
                    "character": 11
                },
                "end": {
                    "line": 129,
                    "character": 112
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO is this going to be called more than once? Shouldn't needed to save more than 1 signature right?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/MarketingSourceController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 32,
                    "character": 0
                },
                "end": {
                    "line": 32,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field MarketingSourceController.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/backend-api/src/main/java/com/powerpro/backend/api/controller/task/SalesforceTaskController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 27,
                    "character": 3
                },
                "end": {
                    "line": 27,
                    "character": 119
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO It should be possible remove this if we remove the cloud endpoints configration and call the salesforce service"
        },
        {
            "range": {
                "start": {
                    "line": 37,
                    "character": 7
                },
                "end": {
                    "line": 37,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO RestTemplate should be provided by Spring as an auto-wire so it doesn't have to be duplicated everywhere."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/validator/InfographicTemplateValidator.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 20,
                    "character": 15
                },
                "end": {
                    "line": 20,
                    "character": 117
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO also validate its a proper url and could go so far as to checking the content-type to be an image"
        },
        {
            "range": {
                "start": {
                    "line": 37,
                    "character": 11
                },
                "end": {
                    "line": 37,
                    "character": 51
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO could also check URLs against regex"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/IntegrationServiceFactory.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 5,
                    "character": 7
                },
                "end": {
                    "line": 5,
                    "character": 68
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 50,
                    "character": 8
                },
                "end": {
                    "line": 50,
                    "character": 26
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 52,
                    "character": 17
                },
                "end": {
                    "line": 52,
                    "character": 20
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.AMC is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 55,
                    "character": 17
                },
                "end": {
                    "line": 55,
                    "character": 25
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 58,
                    "character": 17
                },
                "end": {
                    "line": 58,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI_V4 is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 71,
                    "character": 8
                },
                "end": {
                    "line": 71,
                    "character": 26
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type BackendIntegration is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 73,
                    "character": 17
                },
                "end": {
                    "line": 73,
                    "character": 20
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.AMC is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 76,
                    "character": 17
                },
                "end": {
                    "line": 76,
                    "character": 34
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.REALPAGE_EXCHANGE is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 79,
                    "character": 17
                },
                "end": {
                    "line": 79,
                    "character": 25
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 82,
                    "character": 17
                },
                "end": {
                    "line": 82,
                    "character": 28
                }
            },
            "severity": 2,
            "code": "33554505",
            "source": "Java",
            "message": "The field BackendIntegration.YARDIAPI_V4 is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 44,
                    "character": 7
                },
                "end": {
                    "line": 44,
                    "character": 125
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Figure out how to handle this, since it doesn't use a Community it's possible to end up with a confusing result."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/admin/src/main/java/com/powerpro/platform/web/controller/administration/LeadController.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 259,
                    "character": 11
                },
                "end": {
                    "line": 259,
                    "character": 92
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO only include leasing consultants that are common to all communities in group"
        },
        {
            "range": {
                "start": {
                    "line": 318,
                    "character": 11
                },
                "end": {
                    "line": 318,
                    "character": 88
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO WTF? Why do we convert these to a guest card to \"hide/soft delete\" them?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target/generated-sources/groovy-stubs/main/com/powerpro/platform/model/community/CommunityQueries.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 5,
                    "character": 7
                },
                "end": {
                    "line": 5,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.util is never used"
        },
        {
            "range": {
                "start": {
                    "line": 6,
                    "character": 7
                },
                "end": {
                    "line": 6,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import groovy.lang is never used"
        },
        {
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import groovy.util is never used"
        },
        {
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.lang is never used"
        },
        {
            "range": {
                "start": {
                    "line": 3,
                    "character": 7
                },
                "end": {
                    "line": 3,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.io is never used"
        },
        {
            "range": {
                "start": {
                    "line": 4,
                    "character": 7
                },
                "end": {
                    "line": 4,
                    "character": 15
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import java.net is never used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/model/application/Yardi4LeaseApplicationBuilder.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 70,
                    "character": 11
                },
                "end": {
                    "line": 70,
                    "character": 79
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - Waiting for more information.  Yardi will accept these nodes,"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/target-ide/generated-sources/java/com/powerpro/platform/model/community/QCommunityImageMontageImage.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 16,
                    "character": 64
                },
                "end": {
                    "line": 16,
                    "character": 90
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 13
                },
                "end": {
                    "line": 33,
                    "character": 39
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 36,
                    "character": 54
                },
                "end": {
                    "line": 36,
                    "character": 80
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 45,
                    "character": 13
                },
                "end": {
                    "line": 45,
                    "character": 39
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 48,
                    "character": 55
                },
                "end": {
                    "line": 48,
                    "character": 81
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type CommunityImageMontageImage is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/yardi4/Yardi4GuestCardConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 8,
                    "character": 0
                },
                "end": {
                    "line": 8,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field Yardi4GuestCardConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/amc/AmcMarketingSourceConnector.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 10,
                    "character": 0
                },
                "end": {
                    "line": 10,
                    "character": 6
                }
            },
            "severity": 2,
            "code": "570425421",
            "source": "Java",
            "message": "The value of the field AmcMarketingSourceConnector.log is not used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/voice/DepartmentOperator.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 84,
                    "character": 11
                },
                "end": {
                    "line": 84,
                    "character": 28
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO read from DB"
        },
        {
            "range": {
                "start": {
                    "line": 58,
                    "character": 11
                },
                "end": {
                    "line": 58,
                    "character": 28
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO read from DB"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/User.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 62,
                    "character": 7
                },
                "end": {
                    "line": 62,
                    "character": 59
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be excluded from JSON serialization"
        },
        {
            "range": {
                "start": {
                    "line": 122,
                    "character": 7
                },
                "end": {
                    "line": 122,
                    "character": 59
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be excluded from JSON serialization"
        },
        {
            "range": {
                "start": {
                    "line": 144,
                    "character": 7
                },
                "end": {
                    "line": 144,
                    "character": 59
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be excluded from JSON serialization"
        },
        {
            "range": {
                "start": {
                    "line": 149,
                    "character": 7
                },
                "end": {
                    "line": 149,
                    "character": 59
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be excluded from JSON serialization"
        },
        {
            "range": {
                "start": {
                    "line": 153,
                    "character": 7
                },
                "end": {
                    "line": 153,
                    "character": 59
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be excluded from JSON serialization"
        },
        {
            "range": {
                "start": {
                    "line": 176,
                    "character": 7
                },
                "end": {
                    "line": 176,
                    "character": 60
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - refactor to leverage our StringUtils functions"
        },
        {
            "range": {
                "start": {
                    "line": 192,
                    "character": 7
                },
                "end": {
                    "line": 192,
                    "character": 60
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - refactor to leverage our StringUtils functions"
        },
        {
            "range": {
                "start": {
                    "line": 242,
                    "character": 7
                },
                "end": {
                    "line": 242,
                    "character": 48
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Switch to Lombok's equality method."
        },
        {
            "range": {
                "start": {
                    "line": 264,
                    "character": 11
                },
                "end": {
                    "line": 264,
                    "character": 141
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Figure out why datejoined can have two formats: dateJoined=Thu Mar 03 00:16:46 UTC 2016 and dateJoined=2016-03-03 00:16:46.0"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/model/src/main/java/com/powerpro/platform/model/community/CommunityMarketingSource.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 164,
                    "character": 28
                },
                "end": {
                    "line": 164,
                    "character": 51
                }
            },
            "severity": 2,
            "code": "67108967",
            "source": "Java",
            "message": "The method removeMarketingSource() from the type LeadAccessToken is deprecated"
        },
        {
            "range": {
                "start": {
                    "line": 70,
                    "character": 12
                },
                "end": {
                    "line": 70,
                    "character": 27
                }
            },
            "severity": 2,
            "code": "16777221",
            "source": "Java",
            "message": "The type LeadAccessToken is deprecated"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeGuestCardService.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 357,
                    "character": 11
                },
                "end": {
                    "line": 357,
                    "character": 97
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Add successful sync records here. https://github.com/powerpro/breach/issues/4603"
        },
        {
            "range": {
                "start": {
                    "line": 416,
                    "character": 7
                },
                "end": {
                    "line": 416,
                    "character": 98
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO In the long term we should probably remove this since it may be hiding other problems."
        },
        {
            "range": {
                "start": {
                    "line": 819,
                    "character": 15
                },
                "end": {
                    "line": 819,
                    "character": 89
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: If it's ADVISORY set the sync record to failed, and add the message."
        },
        {
            "range": {
                "start": {
                    "line": 919,
                    "character": 15
                },
                "end": {
                    "line": 919,
                    "character": 123
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: When we get a particular Exception that indicates the RPX system is unable to handle this interaction,"
        },
        {
            "range": {
                "start": {
                    "line": 82,
                    "character": 3
                },
                "end": {
                    "line": 82,
                    "character": 131
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this more efficient by comparing the entity updated dates with the previous successful sync record, and only send the"
        },
        {
            "range": {
                "start": {
                    "line": 148,
                    "character": 19
                },
                "end": {
                    "line": 148,
                    "character": 139
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Fix this. Maybe by reintroducing the wrapper method? Or just return the failed records. See what happens upstream."
        },
        {
            "range": {
                "start": {
                    "line": 350,
                    "character": 15
                },
                "end": {
                    "line": 350,
                    "character": 133
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Consider the consequences of letting this bubble up. We could create a good sync record, then an immediate fail?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/guestcard/GuestCardRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 5,
                    "character": 7
                },
                "end": {
                    "line": 5,
                    "character": 58
                }
            },
            "severity": 2,
            "code": "268435844",
            "source": "Java",
            "message": "The import com.powerpro.platform.model.projection.LabeledCount is never used"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/persistence/src/main/java/com/powerpro/platform/persistence/guestcard/QuoteRepository.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 6
                },
                "end": {
                    "line": 21,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be removed and replace by using the pageable method below."
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 6
                },
                "end": {
                    "line": 33,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO This should be removed and replaced by using the pageable method below."
        },
        {
            "range": {
                "start": {
                    "line": 36,
                    "character": 6
                },
                "end": {
                    "line": 36,
                    "character": 82
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO Ordering should be handled by the pageable argument when that is added."
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangeDateUtil.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 100,
                    "character": 7
                },
                "end": {
                    "line": 100,
                    "character": 95
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO The expected format is \"MM/dd/yyyy\" so why would we ever get dates like \"1/1/1900\"?"
        }
    ]
}


[Trace - 10:29:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/connector/rpx/RealPageExchangeClient.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 437,
                    "character": 7
                },
                "end": {
                    "line": 437,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just return the inner result and strip all this wrapper garbage off."
        },
        {
            "range": {
                "start": {
                    "line": 270,
                    "character": 7
                },
                "end": {
                    "line": 270,
                    "character": 111
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this take the entire request object already constructed, or is it a better API with the args?"
        },
        {
            "range": {
                "start": {
                    "line": 299,
                    "character": 7
                },
                "end": {
                    "line": 299,
                    "character": 101
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Figure out where this goes in the interface, and why we use it in such a one-off manner."
        },
        {
            "range": {
                "start": {
                    "line": 300,
                    "character": 7
                },
                "end": {
                    "line": 300,
                    "character": 111
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Make this take the entire request object already constructed, or is it a better API with the args?"
        },
        {
            "range": {
                "start": {
                    "line": 351,
                    "character": 7
                },
                "end": {
                    "line": 351,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just return the inner result and strip all this wrapper garbage off."
        },
        {
            "range": {
                "start": {
                    "line": 393,
                    "character": 7
                },
                "end": {
                    "line": 393,
                    "character": 81
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Just return the inner result and strip all this wrapper garbage off."
        }
    ]
}


[Trace - 10:29:51 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/common/src/main/java/com/powerpro/platform/service/integration/rpx/RealPageExchangePickListItemConverter.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 29,
                    "character": 7
                },
                "end": {
                    "line": 29,
                    "character": 84
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO - can we provide comments with some examples for data this should match?"
        }
    ]
}


[Trace - 10:29:51 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///Users/dan/dev/powerpro/breach/util/src/main/java/com/powerpro/platform/util/AmazonS3Client.java",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 116,
                    "character": 11
                },
                "end": {
                    "line": 116,
                    "character": 72
                }
            },
            "severity": 3,
            "code": "536871362",
            "source": "Java",
            "message": "TODO: Do we really need a logging request interceptor for S3?"
        }
    ]
}


[Trace - 10:29:51 AM] Received request 'client/registerCapability - (18)'.
Params: {
    "registrations": [
        {
            "id": "26675156-87df-4572-a211-80d947516128",
            "method": "workspace/didChangeWatchedFiles",
            "registerOptions": {
                "watchers": [
                    {
                        "globPattern": "**/*.java"
                    },
                    {
                        "globPattern": "**/pom.xml"
                    },
                    {
                        "globPattern": "**/*.gradle"
                    },
                    {
                        "globPattern": "**/gradle.properties"
                    },
                    {
                        "globPattern": "**/.project"
                    },
                    {
                        "globPattern": "**/.classpath"
                    },
                    {
                        "globPattern": "**/.settings/*.prefs"
                    },
                    {
                        "globPattern": "**/src/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/admin/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/backend-api/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/partner-api/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/backend-api/.apt_generated/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/model/target/generated-sources/groovy-stubs/main/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/common/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/common/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/eclipse-java-style.xml/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/model/target-ide/generated-sources/java/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/model/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/api/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/partner-api/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/common/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/api/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/persistence/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/common/.apt_generated/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/model/.apt_generated/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/api/.apt_generated/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/model/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/util/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/persistence/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/admin/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/partner-api/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/model/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/admin/.apt_generated/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/admin/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/partner-api/.apt_generated/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/util/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/persistence/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/backend-api/target-ide/generated-test-sources/test-annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/util/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/api/target-ide/generated-sources/annotations/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/backend-api/.apt_generated_tests/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/util/.apt_generated/**"
                    },
                    {
                        "globPattern": "/Users/dan/dev/powerpro/breach/persistence/.apt_generated/**"
                    }
                ]
            }
        }
    ]
}


[Trace - 10:29:51 AM] Sending response 'client/registerCapability - (18)'. Processing request took 14ms
No result returned.
